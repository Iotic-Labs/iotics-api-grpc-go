// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (common)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/common.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Scope is a request parameter used to apply a scope to a given request.
// GLOBAL - go over the network/target the public Twin
// LOCAL - restrain the request to the local host
type Scope int32

const (
	Scope_GLOBAL Scope = 0
	Scope_LOCAL  Scope = 1
)

// Enum value maps for Scope.
var (
	Scope_name = map[int32]string{
		0: "GLOBAL",
		1: "LOCAL",
	}
	Scope_value = map[string]int32{
		"GLOBAL": 0,
		"LOCAL":  1,
	}
)

func (x Scope) Enum() *Scope {
	p := new(Scope)
	*p = x
	return p
}

func (x Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_iotics_api_common_proto_enumTypes[0].Descriptor()
}

func (Scope) Type() protoreflect.EnumType {
	return &file_iotics_api_common_proto_enumTypes[0]
}

func (x Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scope.Descriptor instead.
func (Scope) EnumDescriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{0}
}

// Limit is a request parameter to limit the number of results.
type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max number of results (under configuration max limit constraint)
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{0}
}

func (x *Limit) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Offset is a request parameter applicable in conjunction with the "Limit"
// request parameter to start returning results from the given offset.
type Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result number to start from
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Offset) Reset() {
	*x = Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offset) ProtoMessage() {}

func (x *Offset) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offset.ProtoReflect.Descriptor instead.
func (*Offset) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{1}
}

func (x *Offset) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Range is the combination of the "Limit" and "Offset" is a request parameters. It is
// used to return a specific range of results. Default value is applied if no limit is specified.
type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *Limit  `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset *Offset `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{2}
}

func (x *Range) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Range) GetOffset() *Offset {
	if x != nil {
		return x.Offset
	}
	return nil
}

// LangLiteral is a metadata property type describing a string with a given language (implicit datatype: rdf:langString).
type LangLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 2-character language code
	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	// String representation of the value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LangLiteral) Reset() {
	*x = LangLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangLiteral) ProtoMessage() {}

func (x *LangLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangLiteral.ProtoReflect.Descriptor instead.
func (*LangLiteral) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{3}
}

func (x *LangLiteral) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LangLiteral) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// StringLiteral is a metadata property type describing a string without a language (implicit datatype: rdf:string).
type StringLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String representation of the value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringLiteral) Reset() {
	*x = StringLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLiteral) ProtoMessage() {}

func (x *StringLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringLiteral.ProtoReflect.Descriptor instead.
func (*StringLiteral) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{4}
}

func (x *StringLiteral) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Literal is a metadata property type describing a literal with the given datatype (implicit datatype: rdfs:Literal).
type Literal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// XSD data type (e.g. double) without its namespace prefix (http://www.w3.org/2001/XMLSchema#). The following types
	// are currently supported:
	// dateTime, time, date, boolean, integer, decimal, float, double, nonPositiveInteger, negativeInteger,
	// nonNegativeInteger, positiveInteger, long, unsignedLong, int, unsignedInt, short, unsignedShort, byte,
	// unsignedByte, base64Binary, anyURI
	DataType string `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	// String representation of the value according to XSD datatype specification
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Literal) Reset() {
	*x = Literal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Literal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Literal) ProtoMessage() {}

func (x *Literal) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Literal.ProtoReflect.Descriptor instead.
func (*Literal) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{5}
}

func (x *Literal) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Literal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Uri is a metadata property type describing am Uri.
type Uri struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String representation of the value
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Uri) Reset() {
	*x = Uri{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uri) ProtoMessage() {}

func (x *Uri) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uri.ProtoReflect.Descriptor instead.
func (*Uri) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{6}
}

func (x *Uri) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Property is a metadata property with a single value.
// Multiple instances are used to represent a key (predicate) with multiple values.
type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key (predicate) of the property
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the property. Only one of these fields can be set
	//
	// Types that are assignable to Value:
	//
	//	*Property_LiteralValue
	//	*Property_LangLiteralValue
	//	*Property_StringLiteralValue
	//	*Property_UriValue
	Value isProperty_Value `protobuf_oneof:"value"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{7}
}

func (x *Property) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *Property) GetValue() isProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Property) GetLiteralValue() *Literal {
	if x, ok := x.GetValue().(*Property_LiteralValue); ok {
		return x.LiteralValue
	}
	return nil
}

func (x *Property) GetLangLiteralValue() *LangLiteral {
	if x, ok := x.GetValue().(*Property_LangLiteralValue); ok {
		return x.LangLiteralValue
	}
	return nil
}

func (x *Property) GetStringLiteralValue() *StringLiteral {
	if x, ok := x.GetValue().(*Property_StringLiteralValue); ok {
		return x.StringLiteralValue
	}
	return nil
}

func (x *Property) GetUriValue() *Uri {
	if x, ok := x.GetValue().(*Property_UriValue); ok {
		return x.UriValue
	}
	return nil
}

type isProperty_Value interface {
	isProperty_Value()
}

type Property_LiteralValue struct {
	LiteralValue *Literal `protobuf:"bytes,2,opt,name=literalValue,proto3,oneof"`
}

type Property_LangLiteralValue struct {
	LangLiteralValue *LangLiteral `protobuf:"bytes,3,opt,name=langLiteralValue,proto3,oneof"`
}

type Property_StringLiteralValue struct {
	StringLiteralValue *StringLiteral `protobuf:"bytes,4,opt,name=stringLiteralValue,proto3,oneof"`
}

type Property_UriValue struct {
	UriValue *Uri `protobuf:"bytes,5,opt,name=uriValue,proto3,oneof"`
}

func (*Property_LiteralValue) isProperty_Value() {}

func (*Property_LangLiteralValue) isProperty_Value() {}

func (*Property_StringLiteralValue) isProperty_Value() {}

func (*Property_UriValue) isProperty_Value() {}

// GeoLocation is the geographic location of a Twin.
type GeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latitude
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// Longitude
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *GeoLocation) Reset() {
	*x = GeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoLocation) ProtoMessage() {}

func (x *GeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoLocation.ProtoReflect.Descriptor instead.
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{8}
}

func (x *GeoLocation) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GeoLocation) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

// GeoCircle is an approximate geographic location.
type GeoCircle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *GeoLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// Radius (Km) relative to the geolocation
	RadiusKm float64 `protobuf:"fixed64,2,opt,name=radiusKm,proto3" json:"radiusKm,omitempty"`
}

func (x *GeoCircle) Reset() {
	*x = GeoCircle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoCircle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoCircle) ProtoMessage() {}

func (x *GeoCircle) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoCircle.ProtoReflect.Descriptor instead.
func (*GeoCircle) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{9}
}

func (x *GeoCircle) GetLocation() *GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *GeoCircle) GetRadiusKm() float64 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

// RequestInfo is a request parameter used to provide additional information about the request.
// It will also be included in the response.
type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// startTime isthe start timestamp of the request
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{10}
}

func (x *RequestInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Headers describes the common headers applicable to all the API requests
// (except for Search subscribe: see SubscriptionHeaders).
type Headers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional client reference. Any responses associated with the request will include this reference.
	ClientRef string `protobuf:"bytes,1,opt,name=clientRef,proto3" json:"clientRef,omitempty"`
	// User namespace used to group all the requests/responses
	ClientAppId string `protobuf:"bytes,2,opt,name=clientAppId,proto3" json:"clientAppId,omitempty"`
	// Used to loosely link requests/responses in a distributed environment
	// each layer can add its own id to the list. Transaction ref is limited to
	// a max of 16 elements per list and, for each list item, a max length of 36
	// characters
	TransactionRef []string `protobuf:"bytes,3,rep,name=transactionRef,proto3" json:"transactionRef,omitempty"`
	// Used for group listener, optional - Not implemented yet
	ConsumerGroup *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=consumerGroup,proto3" json:"consumerGroup,omitempty"`
	// Client request timeout used to stop the request processing once the timeout is reached
	RequestTimeout *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=requestTimeout,proto3" json:"requestTimeout,omitempty"`
	RequestInfo    *RequestInfo           `protobuf:"bytes,6,opt,name=requestInfo,proto3" json:"requestInfo,omitempty"`
}

func (x *Headers) Reset() {
	*x = Headers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Headers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Headers) ProtoMessage() {}

func (x *Headers) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Headers.ProtoReflect.Descriptor instead.
func (*Headers) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{11}
}

func (x *Headers) GetClientRef() string {
	if x != nil {
		return x.ClientRef
	}
	return ""
}

func (x *Headers) GetClientAppId() string {
	if x != nil {
		return x.ClientAppId
	}
	return ""
}

func (x *Headers) GetTransactionRef() []string {
	if x != nil {
		return x.TransactionRef
	}
	return nil
}

func (x *Headers) GetConsumerGroup() *wrapperspb.StringValue {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

func (x *Headers) GetRequestTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestTimeout
	}
	return nil
}

func (x *Headers) GetRequestInfo() *RequestInfo {
	if x != nil {
		return x.RequestInfo
	}
	return nil
}

// SubscriptionHeaders describes a Search subscribe header. (Will be DEPRECATED with the client-ref from Headers).
type SubscriptionHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User namespace used to group all the requests/responses
	ClientAppId string `protobuf:"bytes,1,opt,name=clientAppId,proto3" json:"clientAppId,omitempty"`
	// Used to loosely link requests/responses in a distributed environment
	// each layer can add its own id to the list. Transaction ref is limited to
	// a max of 16 elements per list and, for each list item, a max length of 36
	// characters
	TransactionRef []string `protobuf:"bytes,2,rep,name=transactionRef,proto3" json:"transactionRef,omitempty"`
	// consumer group (for group listener, optional) - Not implemented yet
	ConsumerGroup *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=consumerGroup,proto3" json:"consumerGroup,omitempty"`
}

func (x *SubscriptionHeaders) Reset() {
	*x = SubscriptionHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionHeaders) ProtoMessage() {}

func (x *SubscriptionHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionHeaders.ProtoReflect.Descriptor instead.
func (*SubscriptionHeaders) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{12}
}

func (x *SubscriptionHeaders) GetClientAppId() string {
	if x != nil {
		return x.ClientAppId
	}
	return ""
}

func (x *SubscriptionHeaders) GetTransactionRef() []string {
	if x != nil {
		return x.TransactionRef
	}
	return nil
}

func (x *SubscriptionHeaders) GetConsumerGroup() *wrapperspb.StringValue {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

// TwinID is the virtual representation of a (physical, purely virtual or hybrid) device,
// is only ever located in the host it was created.
type TwinID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Twin Identifier (using DID format)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Host Identifier (using DID format)
	HostId string `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *TwinID) Reset() {
	*x = TwinID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwinID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwinID) ProtoMessage() {}

func (x *TwinID) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwinID.ProtoReflect.Descriptor instead.
func (*TwinID) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{13}
}

func (x *TwinID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwinID) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

// Value is the definition of an individual piece of data within a Feed share or an Input send. Values are purely descriptive, e.g. a
// follower should expect data to match the values associated with said Feed/Input but must be able to recover where this
// is not the case.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// label is the unique identifier of the value. It is language-neutral. E.g.: "t" / "temp" / "temperature".
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// comment is the (optional) human-readable description of the value. It is language-specific. E.g.: "Engine oil temperature"
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// unit is the (optional) fully qualified ontology string URI of the unit, e.g. http://purl.obolibrary.org/obo/UO_0000027
	Unit string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	// dataType is the xsd type in shorthand notation.
	// Currently supported types are: base64Binary, decimal, float, double, dateTime, time, date, boolean, integer,
	// nonPositiveInteger, negativeInteger, nonNegativeInteger, positiveInteger, long, unsignedLong, int, unsignedInt,
	// short, unsignedShort, byte, unsignedByte
	DataType string `protobuf:"bytes,4,opt,name=dataType,proto3" json:"dataType,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{14}
}

func (x *Value) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Value) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Value) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Value) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

// Values defines a set of values to be added and/or deleted.
type Values struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// added is the list of values to be added. Note that deletedByLabel takes precedence over this, i.e. if both added
	// and deletedByLabel contain the same value, the value will be deleted.
	Added []*Value `protobuf:"bytes,1,rep,name=added,proto3" json:"added,omitempty"`
	// deletedByLabel is the list of labels of values to be deleted.
	DeletedByLabel []string `protobuf:"bytes,2,rep,name=deletedByLabel,proto3" json:"deletedByLabel,omitempty"`
}

func (x *Values) Reset() {
	*x = Values{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Values) ProtoMessage() {}

func (x *Values) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Values.ProtoReflect.Descriptor instead.
func (*Values) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{15}
}

func (x *Values) GetAdded() []*Value {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *Values) GetDeletedByLabel() []string {
	if x != nil {
		return x.DeletedByLabel
	}
	return nil
}

// FeedData is set of datapoints shared via a Feed.
type FeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// occurredAt is the UTC timestamp of the sample. Typically this is either the time at which an application shared
	// this sample or the time applicable to the sample itself (such as an hourly weather observation).
	// (Optional: set to host time if not provided)
	OccurredAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=occurredAt,proto3" json:"occurredAt,omitempty"`
	// mime is the mime type of the encoded data.
	Mime string `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`
	// data is the actual set of datapoints, encoded according the the mime type. The data should follow the Feed's
	// value definitions but that is not enforced. (See also Value)
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FeedData) Reset() {
	*x = FeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedData) ProtoMessage() {}

func (x *FeedData) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedData.ProtoReflect.Descriptor instead.
func (*FeedData) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{16}
}

func (x *FeedData) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

func (x *FeedData) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *FeedData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// PropertyUpdate describes the update of resource's underlying properties.
// Can be used to add, replace, or delete properties. The order of operations is:
// clearedAll (if True), deleted, deletedByKey, added.
// Note that internal properties (such as location) cannot be modified here.
type PropertyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Delete all properties currently set on the resource.
	ClearedAll bool `protobuf:"varint,1,opt,name=clearedAll,proto3" json:"clearedAll,omitempty"`
	// Delete specific exact properties (by key and value). This operation is ignored if clearAll is True.
	Deleted []*Property `protobuf:"bytes,2,rep,name=deleted,proto3" json:"deleted,omitempty"`
	// Delete any properties with the given keys (predicates). This operation is ignored if clearAll is True.
	DeletedByKey []string `protobuf:"bytes,3,rep,name=deletedByKey,proto3" json:"deletedByKey,omitempty"`
	// Adds the given properties
	Added []*Property `protobuf:"bytes,4,rep,name=added,proto3" json:"added,omitempty"`
}

func (x *PropertyUpdate) Reset() {
	*x = PropertyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyUpdate) ProtoMessage() {}

func (x *PropertyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyUpdate.ProtoReflect.Descriptor instead.
func (*PropertyUpdate) Descriptor() ([]byte, []int) {
	return file_iotics_api_common_proto_rawDescGZIP(), []int{17}
}

func (x *PropertyUpdate) GetClearedAll() bool {
	if x != nil {
		return x.ClearedAll
	}
	return false
}

func (x *PropertyUpdate) GetDeleted() []*Property {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *PropertyUpdate) GetDeletedByKey() []string {
	if x != nil {
		return x.DeletedByKey
	}
	return nil
}

func (x *PropertyUpdate) GetAdded() []*Property {
	if x != nil {
		return x.Added
	}
	return nil
}

var File_iotics_api_common_proto protoreflect.FileDescriptor

var file_iotics_api_common_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x27,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x07, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x1b, 0x0a, 0x03, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x02,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x0c,
	0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x6c, 0x61, 0x6e, 0x67, 0x4c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x6c, 0x61,
	0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b,
	0x0a, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x75,
	0x72, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x72, 0x69, 0x48, 0x00,
	0x52, 0x08, 0x75, 0x72, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x43, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x4b, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x4b, 0x6d, 0x22, 0x47, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb4, 0x02,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x30, 0x0a, 0x06, 0x54, 0x77,
	0x69, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x6e, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a,
	0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x63,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x41, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x41, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x2a, 0x1e, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x10, 0x01, 0x42, 0x7f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71, 0x61, 0x70, 0x69, 0x2f,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02, 0x0a, 0x49, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_common_proto_rawDescOnce sync.Once
	file_iotics_api_common_proto_rawDescData = file_iotics_api_common_proto_rawDesc
)

func file_iotics_api_common_proto_rawDescGZIP() []byte {
	file_iotics_api_common_proto_rawDescOnce.Do(func() {
		file_iotics_api_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_common_proto_rawDescData)
	})
	return file_iotics_api_common_proto_rawDescData
}

var file_iotics_api_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_iotics_api_common_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_iotics_api_common_proto_goTypes = []interface{}{
	(Scope)(0),                     // 0: iotics.api.Scope
	(*Limit)(nil),                  // 1: iotics.api.Limit
	(*Offset)(nil),                 // 2: iotics.api.Offset
	(*Range)(nil),                  // 3: iotics.api.Range
	(*LangLiteral)(nil),            // 4: iotics.api.LangLiteral
	(*StringLiteral)(nil),          // 5: iotics.api.StringLiteral
	(*Literal)(nil),                // 6: iotics.api.Literal
	(*Uri)(nil),                    // 7: iotics.api.Uri
	(*Property)(nil),               // 8: iotics.api.Property
	(*GeoLocation)(nil),            // 9: iotics.api.GeoLocation
	(*GeoCircle)(nil),              // 10: iotics.api.GeoCircle
	(*RequestInfo)(nil),            // 11: iotics.api.RequestInfo
	(*Headers)(nil),                // 12: iotics.api.Headers
	(*SubscriptionHeaders)(nil),    // 13: iotics.api.SubscriptionHeaders
	(*TwinID)(nil),                 // 14: iotics.api.TwinID
	(*Value)(nil),                  // 15: iotics.api.Value
	(*Values)(nil),                 // 16: iotics.api.Values
	(*FeedData)(nil),               // 17: iotics.api.FeedData
	(*PropertyUpdate)(nil),         // 18: iotics.api.PropertyUpdate
	(*timestamppb.Timestamp)(nil),  // 19: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil), // 20: google.protobuf.StringValue
}
var file_iotics_api_common_proto_depIdxs = []int32{
	1,  // 0: iotics.api.Range.limit:type_name -> iotics.api.Limit
	2,  // 1: iotics.api.Range.offset:type_name -> iotics.api.Offset
	6,  // 2: iotics.api.Property.literalValue:type_name -> iotics.api.Literal
	4,  // 3: iotics.api.Property.langLiteralValue:type_name -> iotics.api.LangLiteral
	5,  // 4: iotics.api.Property.stringLiteralValue:type_name -> iotics.api.StringLiteral
	7,  // 5: iotics.api.Property.uriValue:type_name -> iotics.api.Uri
	9,  // 6: iotics.api.GeoCircle.location:type_name -> iotics.api.GeoLocation
	19, // 7: iotics.api.RequestInfo.startTime:type_name -> google.protobuf.Timestamp
	20, // 8: iotics.api.Headers.consumerGroup:type_name -> google.protobuf.StringValue
	19, // 9: iotics.api.Headers.requestTimeout:type_name -> google.protobuf.Timestamp
	11, // 10: iotics.api.Headers.requestInfo:type_name -> iotics.api.RequestInfo
	20, // 11: iotics.api.SubscriptionHeaders.consumerGroup:type_name -> google.protobuf.StringValue
	15, // 12: iotics.api.Values.added:type_name -> iotics.api.Value
	19, // 13: iotics.api.FeedData.occurredAt:type_name -> google.protobuf.Timestamp
	8,  // 14: iotics.api.PropertyUpdate.deleted:type_name -> iotics.api.Property
	8,  // 15: iotics.api.PropertyUpdate.added:type_name -> iotics.api.Property
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_iotics_api_common_proto_init() }
func file_iotics_api_common_proto_init() {
	if File_iotics_api_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Literal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uri); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoCircle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Headers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwinID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Values); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_iotics_api_common_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Property_LiteralValue)(nil),
		(*Property_LangLiteralValue)(nil),
		(*Property_StringLiteralValue)(nil),
		(*Property_UriValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iotics_api_common_proto_goTypes,
		DependencyIndexes: file_iotics_api_common_proto_depIdxs,
		EnumInfos:         file_iotics_api_common_proto_enumTypes,
		MessageInfos:      file_iotics_api_common_proto_msgTypes,
	}.Build()
	File_iotics_api_common_proto = out.File
	file_iotics_api_common_proto_rawDesc = nil
	file_iotics_api_common_proto_goTypes = nil
	file_iotics_api_common_proto_depIdxs = nil
}
