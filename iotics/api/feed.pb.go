// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (feed)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/feed.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A feed representation.
type FeedID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed identifier string representation (simple string) (unique within the scope of a twin identifier's feed set)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Twin identifier string representation (simple string) (twin to which the feed belongs)
	TwinId string `protobuf:"bytes,2,opt,name=twinId,proto3" json:"twinId,omitempty"`
	// Host identifier string representation (simple string) (Host to which the twin belongs)
	HostId string `protobuf:"bytes,3,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *FeedID) Reset() {
	*x = FeedID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedID) ProtoMessage() {}

func (x *FeedID) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedID.ProtoReflect.Descriptor instead.
func (*FeedID) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{0}
}

func (x *FeedID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedID) GetTwinId() string {
	if x != nil {
		return x.TwinId
	}
	return ""
}

func (x *FeedID) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

// CreateFeedRequestCreate is used to create a new feed in a given twin.
type CreateFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CreateFeedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// CreateFeedRequest mandatory arguments
	Args *CreateFeedRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// CreateFeedRequest payload
	Payload *CreateFeedRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateFeedRequest) Reset() {
	*x = CreateFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedRequest) ProtoMessage() {}

func (x *CreateFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{1}
}

func (x *CreateFeedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateFeedRequest) GetArgs() *CreateFeedRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CreateFeedRequest) GetPayload() *CreateFeedRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// CreateFeedResponse describes a created feed.
type CreateFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CreateFeedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// CreateFeedResponse payload
	Payload *CreateFeedResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateFeedResponse) Reset() {
	*x = CreateFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedResponse) ProtoMessage() {}

func (x *CreateFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedResponse.ProtoReflect.Descriptor instead.
func (*CreateFeedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateFeedResponse) GetPayload() *CreateFeedResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// DeleteFeedRequest is used to delete a feed from a given twin.
type DeleteFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeleteFeedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DeleteFeedRequest mandatory arguments
	Args *DeleteFeedRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DeleteFeedRequest) Reset() {
	*x = DeleteFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedRequest) ProtoMessage() {}

func (x *DeleteFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteFeedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteFeedRequest) GetArgs() *DeleteFeedRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// DeleteFeedResponse describes a deleted feed.
type DeleteFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeleteFeedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DeleteFeedResponse payload
	Payload *DeleteFeedResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeleteFeedResponse) Reset() {
	*x = DeleteFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedResponse) ProtoMessage() {}

func (x *DeleteFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedResponse.ProtoReflect.Descriptor instead.
func (*DeleteFeedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFeedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteFeedResponse) GetPayload() *DeleteFeedResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpdateFeedRequest is used to update attributes (including metadata) of a given feed.
type UpdateFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateFeedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// UpdateFeedRequest arguments
	Args *UpdateFeedRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// UpdateFeedRequest payload
	Payload *UpdateFeedRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateFeedRequest) Reset() {
	*x = UpdateFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedRequest) ProtoMessage() {}

func (x *UpdateFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFeedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpdateFeedRequest) GetArgs() *UpdateFeedRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *UpdateFeedRequest) GetPayload() *UpdateFeedRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpdateFeedResponse is used to indicate a successful update.
type UpdateFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateFeedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	//UpdateFeedResponse payload
	Payload *UpdateFeedResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateFeedResponse) Reset() {
	*x = UpdateFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedResponse) ProtoMessage() {}

func (x *UpdateFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateFeedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpdateFeedResponse) GetPayload() *UpdateFeedResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// ShareFeedDataRequest is used to share a new sample of data for the given feed.
type ShareFeedDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ShareFeedDataRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// ShareFeedDataRequest arguments
	Args *ShareFeedDataRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// ShareFeedDataRequest payload
	Payload *ShareFeedDataRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ShareFeedDataRequest) Reset() {
	*x = ShareFeedDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFeedDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFeedDataRequest) ProtoMessage() {}

func (x *ShareFeedDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFeedDataRequest.ProtoReflect.Descriptor instead.
func (*ShareFeedDataRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{7}
}

func (x *ShareFeedDataRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ShareFeedDataRequest) GetArgs() *ShareFeedDataRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ShareFeedDataRequest) GetPayload() *ShareFeedDataRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// ShareFeedDataResponse is used to indicate a successful feed share.
type ShareFeedDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ShareFeedDataResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *ShareFeedDataResponse) Reset() {
	*x = ShareFeedDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFeedDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFeedDataResponse) ProtoMessage() {}

func (x *ShareFeedDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFeedDataResponse.ProtoReflect.Descriptor instead.
func (*ShareFeedDataResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{8}
}

func (x *ShareFeedDataResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

// ListAllFeedsRequest is used to list all the feeds owned by a given twin.
type ListAllFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ListAllFeedsRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// ListAllFeedsRequest arguments
	Args *ListAllFeedsRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// Limit the results according to the value
	// (optional: when not supplied, assume no default limits required - See https://ioticlabs.atlassian.net/browse/FO-1362)
	Range *Range `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *ListAllFeedsRequest) Reset() {
	*x = ListAllFeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFeedsRequest) ProtoMessage() {}

func (x *ListAllFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFeedsRequest.ProtoReflect.Descriptor instead.
func (*ListAllFeedsRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{9}
}

func (x *ListAllFeedsRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllFeedsRequest) GetArgs() *ListAllFeedsRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ListAllFeedsRequest) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

// ListAllFeedsResponse describes the list of the feeds owned by a twin.
type ListAllFeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ListAllFeedsResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// ListAllFeedsResponse payload
	Payload *ListAllFeedsResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ListAllFeedsResponse) Reset() {
	*x = ListAllFeedsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllFeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFeedsResponse) ProtoMessage() {}

func (x *ListAllFeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFeedsResponse.ProtoReflect.Descriptor instead.
func (*ListAllFeedsResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{10}
}

func (x *ListAllFeedsResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllFeedsResponse) GetPayload() *ListAllFeedsResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Description of twin: Provides public metadata lookup for individual resources.
type DescribeFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DescribeFeedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DescribeFeedRequest mandatory arguments
	Args *DescribeFeedRequest_Arguments `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DescribeFeedRequest) Reset() {
	*x = DescribeFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFeedRequest) ProtoMessage() {}

func (x *DescribeFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFeedRequest.ProtoReflect.Descriptor instead.
func (*DescribeFeedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeFeedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeFeedRequest) GetArgs() *DescribeFeedRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// Describe feed response.
type DescribeFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DescribeFeedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DescribeFeedResponse payload
	Payload *DescribeFeedResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DescribeFeedResponse) Reset() {
	*x = DescribeFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFeedResponse) ProtoMessage() {}

func (x *DescribeFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFeedResponse.ProtoReflect.Descriptor instead.
func (*DescribeFeedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeFeedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeFeedResponse) GetPayload() *DescribeFeedResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpsertFeedWithMeta is used to describe the full feed state. Used in UpsertTwinRequest.
type UpsertFeedWithMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed identifier string representation (simple string) (unique within the scope of a twin identifier's feed set)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// StoreLast dictates whether to store the last shared sample of the feed. Default 'False'
	StoreLast bool `protobuf:"varint,4,opt,name=storeLast,proto3" json:"storeLast,omitempty"`
	// Values to set
	Values []*Value `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`
	// Feed properties to set
	Properties []*Property `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpsertFeedWithMeta) Reset() {
	*x = UpsertFeedWithMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertFeedWithMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertFeedWithMeta) ProtoMessage() {}

func (x *UpsertFeedWithMeta) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertFeedWithMeta.ProtoReflect.Descriptor instead.
func (*UpsertFeedWithMeta) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{13}
}

func (x *UpsertFeedWithMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertFeedWithMeta) GetStoreLast() bool {
	if x != nil {
		return x.StoreLast
	}
	return false
}

func (x *UpsertFeedWithMeta) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UpsertFeedWithMeta) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Payload describes the data needed to create a feed.
type CreateFeedRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed identifier string representation (simple string) (unique within the scope of a twin identifier's feed set)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateFeedRequest_Payload) Reset() {
	*x = CreateFeedRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedRequest_Payload) ProtoMessage() {}

func (x *CreateFeedRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedRequest_Payload.ProtoReflect.Descriptor instead.
func (*CreateFeedRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateFeedRequest_Payload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Arguments describes the mandatory arguments to identify the twin the feed belongs to.
type CreateFeedRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of the twin owning this feed
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *CreateFeedRequest_Arguments) Reset() {
	*x = CreateFeedRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedRequest_Arguments) ProtoMessage() {}

func (x *CreateFeedRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedRequest_Arguments.ProtoReflect.Descriptor instead.
func (*CreateFeedRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CreateFeedRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// CreateFeedResponse payload.
type CreateFeedResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created feed
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *CreateFeedResponse_Payload) Reset() {
	*x = CreateFeedResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedResponse_Payload) ProtoMessage() {}

func (x *CreateFeedResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedResponse_Payload.ProtoReflect.Descriptor instead.
func (*CreateFeedResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateFeedResponse_Payload) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// DeleteFeedRequest arguments.
type DeleteFeedRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed to delete
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *DeleteFeedRequest_Arguments) Reset() {
	*x = DeleteFeedRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedRequest_Arguments) ProtoMessage() {}

func (x *DeleteFeedRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DeleteFeedRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DeleteFeedRequest_Arguments) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// DeleteFeedResponse payload.
type DeleteFeedResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deleted feed
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *DeleteFeedResponse_Payload) Reset() {
	*x = DeleteFeedResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedResponse_Payload) ProtoMessage() {}

func (x *DeleteFeedResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedResponse_Payload.ProtoReflect.Descriptor instead.
func (*DeleteFeedResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteFeedResponse_Payload) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// UpdateFeedRequest payload. One or more fields can be provided, depending on what needs to be updated.
// Note that the specified metadata changes are applied in the following order:
// tags, values, labels, comments
type UpdateFeedRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// StoreLast dictates whether to store the last shared sample of a feed.
	StoreLast *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=storeLast,proto3" json:"storeLast,omitempty"`
	// Values are descriptive individual data items to add/remove.
	Values *Values `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`
	// Custom properties to add/remove. Internal properties (such as location) cannot be modified here.
	Properties *PropertyUpdate `protobuf:"bytes,6,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpdateFeedRequest_Payload) Reset() {
	*x = UpdateFeedRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedRequest_Payload) ProtoMessage() {}

func (x *UpdateFeedRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedRequest_Payload.ProtoReflect.Descriptor instead.
func (*UpdateFeedRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UpdateFeedRequest_Payload) GetStoreLast() *wrapperspb.BoolValue {
	if x != nil {
		return x.StoreLast
	}
	return nil
}

func (x *UpdateFeedRequest_Payload) GetValues() *Values {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UpdateFeedRequest_Payload) GetProperties() *PropertyUpdate {
	if x != nil {
		return x.Properties
	}
	return nil
}

// UpdateFeedRequest arguments.
type UpdateFeedRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *UpdateFeedRequest_Arguments) Reset() {
	*x = UpdateFeedRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedRequest_Arguments) ProtoMessage() {}

func (x *UpdateFeedRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedRequest_Arguments.ProtoReflect.Descriptor instead.
func (*UpdateFeedRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{5, 1}
}

func (x *UpdateFeedRequest_Arguments) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// UpdateFeedResponse payload.
type UpdateFeedResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Updated feed
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *UpdateFeedResponse_Payload) Reset() {
	*x = UpdateFeedResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedResponse_Payload) ProtoMessage() {}

func (x *UpdateFeedResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedResponse_Payload.ProtoReflect.Descriptor instead.
func (*UpdateFeedResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateFeedResponse_Payload) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// ShareFeedDataRequest payload.
type ShareFeedDataRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sample to share
	Sample *FeedData `protobuf:"bytes,1,opt,name=sample,proto3" json:"sample,omitempty"`
}

func (x *ShareFeedDataRequest_Payload) Reset() {
	*x = ShareFeedDataRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFeedDataRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFeedDataRequest_Payload) ProtoMessage() {}

func (x *ShareFeedDataRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFeedDataRequest_Payload.ProtoReflect.Descriptor instead.
func (*ShareFeedDataRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ShareFeedDataRequest_Payload) GetSample() *FeedData {
	if x != nil {
		return x.Sample
	}
	return nil
}

// ShareFeedDataRequest arguments.
type ShareFeedDataRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed sharing the sample
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *ShareFeedDataRequest_Arguments) Reset() {
	*x = ShareFeedDataRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFeedDataRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFeedDataRequest_Arguments) ProtoMessage() {}

func (x *ShareFeedDataRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFeedDataRequest_Arguments.ProtoReflect.Descriptor instead.
func (*ShareFeedDataRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ShareFeedDataRequest_Arguments) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// ListAllFeedsRequest mandatory arguments.
type ListAllFeedsRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of the twin owning this feed
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *ListAllFeedsRequest_Arguments) Reset() {
	*x = ListAllFeedsRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllFeedsRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFeedsRequest_Arguments) ProtoMessage() {}

func (x *ListAllFeedsRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFeedsRequest_Arguments.ProtoReflect.Descriptor instead.
func (*ListAllFeedsRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListAllFeedsRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// ListAllFeedsResponse payload.
type ListAllFeedsResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of the feeds owned by the twin
	FeedIds []*FeedID `protobuf:"bytes,1,rep,name=feedIds,proto3" json:"feedIds,omitempty"`
}

func (x *ListAllFeedsResponse_Payload) Reset() {
	*x = ListAllFeedsResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllFeedsResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFeedsResponse_Payload) ProtoMessage() {}

func (x *ListAllFeedsResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFeedsResponse_Payload.ProtoReflect.Descriptor instead.
func (*ListAllFeedsResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListAllFeedsResponse_Payload) GetFeedIds() []*FeedID {
	if x != nil {
		return x.FeedIds
	}
	return nil
}

// DescribeFeedRequest arguments.
type DescribeFeedRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feed to describe
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
}

func (x *DescribeFeedRequest_Arguments) Reset() {
	*x = DescribeFeedRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFeedRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFeedRequest_Arguments) ProtoMessage() {}

func (x *DescribeFeedRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFeedRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DescribeFeedRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DescribeFeedRequest_Arguments) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

// Metadata result databag.
type DescribeFeedResponse_MetaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Values semantically describing the share payload of Feed
	Values []*Value `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	// Whether this feed might have its most recent data sample stored. If so, it can be retrieved via FetchLastStored
	// request. (See interest API)
	StoreLast bool `protobuf:"varint,5,opt,name=storeLast,proto3" json:"storeLast,omitempty"`
	// Custom properties associated with this feed.
	Properties []*Property `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *DescribeFeedResponse_MetaResult) Reset() {
	*x = DescribeFeedResponse_MetaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFeedResponse_MetaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFeedResponse_MetaResult) ProtoMessage() {}

func (x *DescribeFeedResponse_MetaResult) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFeedResponse_MetaResult.ProtoReflect.Descriptor instead.
func (*DescribeFeedResponse_MetaResult) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{12, 0}
}

func (x *DescribeFeedResponse_MetaResult) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *DescribeFeedResponse_MetaResult) GetStoreLast() bool {
	if x != nil {
		return x.StoreLast
	}
	return false
}

func (x *DescribeFeedResponse_MetaResult) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

// DescribeFeedResponse payload.
type DescribeFeedResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Described feed
	FeedId *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
	// Metadata result
	Result *DescribeFeedResponse_MetaResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DescribeFeedResponse_Payload) Reset() {
	*x = DescribeFeedResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_feed_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeFeedResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFeedResponse_Payload) ProtoMessage() {}

func (x *DescribeFeedResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_feed_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFeedResponse_Payload.ProtoReflect.Descriptor instead.
func (*DescribeFeedResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_feed_proto_rawDescGZIP(), []int{12, 1}
}

func (x *DescribeFeedResponse_Payload) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

func (x *DescribeFeedResponse_Payload) GetResult() *DescribeFeedResponse_MetaResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_iotics_api_feed_proto protoreflect.FileDescriptor

var file_iotics_api_feed_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x06,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x19, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xbc, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x3b, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x37,
	0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66,
	0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52,
	0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x35, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65,
	0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06,
	0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0xa7, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xab, 0x01, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64,
	0x22, 0xbc, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22,
	0xbb, 0x02, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x37, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x46, 0x0a,
	0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xc2, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x37, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x93, 0x03, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x8b, 0x01,
	0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x7a, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x46, 0x65, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x32, 0xf8, 0x03,
	0x0a, 0x07, 0x46, 0x65, 0x65, 0x64, 0x41, 0x50, 0x49, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x1f,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x09, 0x46, 0x65, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02, 0x0a,
	0x49, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_feed_proto_rawDescOnce sync.Once
	file_iotics_api_feed_proto_rawDescData = file_iotics_api_feed_proto_rawDesc
)

func file_iotics_api_feed_proto_rawDescGZIP() []byte {
	file_iotics_api_feed_proto_rawDescOnce.Do(func() {
		file_iotics_api_feed_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_feed_proto_rawDescData)
	})
	return file_iotics_api_feed_proto_rawDescData
}

var file_iotics_api_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_iotics_api_feed_proto_goTypes = []interface{}{
	(*FeedID)(nil),                          // 0: iotics.api.FeedID
	(*CreateFeedRequest)(nil),               // 1: iotics.api.CreateFeedRequest
	(*CreateFeedResponse)(nil),              // 2: iotics.api.CreateFeedResponse
	(*DeleteFeedRequest)(nil),               // 3: iotics.api.DeleteFeedRequest
	(*DeleteFeedResponse)(nil),              // 4: iotics.api.DeleteFeedResponse
	(*UpdateFeedRequest)(nil),               // 5: iotics.api.UpdateFeedRequest
	(*UpdateFeedResponse)(nil),              // 6: iotics.api.UpdateFeedResponse
	(*ShareFeedDataRequest)(nil),            // 7: iotics.api.ShareFeedDataRequest
	(*ShareFeedDataResponse)(nil),           // 8: iotics.api.ShareFeedDataResponse
	(*ListAllFeedsRequest)(nil),             // 9: iotics.api.ListAllFeedsRequest
	(*ListAllFeedsResponse)(nil),            // 10: iotics.api.ListAllFeedsResponse
	(*DescribeFeedRequest)(nil),             // 11: iotics.api.DescribeFeedRequest
	(*DescribeFeedResponse)(nil),            // 12: iotics.api.DescribeFeedResponse
	(*UpsertFeedWithMeta)(nil),              // 13: iotics.api.UpsertFeedWithMeta
	(*CreateFeedRequest_Payload)(nil),       // 14: iotics.api.CreateFeedRequest.Payload
	(*CreateFeedRequest_Arguments)(nil),     // 15: iotics.api.CreateFeedRequest.Arguments
	(*CreateFeedResponse_Payload)(nil),      // 16: iotics.api.CreateFeedResponse.Payload
	(*DeleteFeedRequest_Arguments)(nil),     // 17: iotics.api.DeleteFeedRequest.Arguments
	(*DeleteFeedResponse_Payload)(nil),      // 18: iotics.api.DeleteFeedResponse.Payload
	(*UpdateFeedRequest_Payload)(nil),       // 19: iotics.api.UpdateFeedRequest.Payload
	(*UpdateFeedRequest_Arguments)(nil),     // 20: iotics.api.UpdateFeedRequest.Arguments
	(*UpdateFeedResponse_Payload)(nil),      // 21: iotics.api.UpdateFeedResponse.Payload
	(*ShareFeedDataRequest_Payload)(nil),    // 22: iotics.api.ShareFeedDataRequest.Payload
	(*ShareFeedDataRequest_Arguments)(nil),  // 23: iotics.api.ShareFeedDataRequest.Arguments
	(*ListAllFeedsRequest_Arguments)(nil),   // 24: iotics.api.ListAllFeedsRequest.Arguments
	(*ListAllFeedsResponse_Payload)(nil),    // 25: iotics.api.ListAllFeedsResponse.Payload
	(*DescribeFeedRequest_Arguments)(nil),   // 26: iotics.api.DescribeFeedRequest.Arguments
	(*DescribeFeedResponse_MetaResult)(nil), // 27: iotics.api.DescribeFeedResponse.MetaResult
	(*DescribeFeedResponse_Payload)(nil),    // 28: iotics.api.DescribeFeedResponse.Payload
	(*Headers)(nil),                         // 29: iotics.api.Headers
	(*Range)(nil),                           // 30: iotics.api.Range
	(*Value)(nil),                           // 31: iotics.api.Value
	(*Property)(nil),                        // 32: iotics.api.Property
	(*TwinID)(nil),                          // 33: iotics.api.TwinID
	(*wrapperspb.BoolValue)(nil),            // 34: google.protobuf.BoolValue
	(*Values)(nil),                          // 35: iotics.api.Values
	(*PropertyUpdate)(nil),                  // 36: iotics.api.PropertyUpdate
	(*FeedData)(nil),                        // 37: iotics.api.FeedData
}
var file_iotics_api_feed_proto_depIdxs = []int32{
	29, // 0: iotics.api.CreateFeedRequest.headers:type_name -> iotics.api.Headers
	15, // 1: iotics.api.CreateFeedRequest.args:type_name -> iotics.api.CreateFeedRequest.Arguments
	14, // 2: iotics.api.CreateFeedRequest.payload:type_name -> iotics.api.CreateFeedRequest.Payload
	29, // 3: iotics.api.CreateFeedResponse.headers:type_name -> iotics.api.Headers
	16, // 4: iotics.api.CreateFeedResponse.payload:type_name -> iotics.api.CreateFeedResponse.Payload
	29, // 5: iotics.api.DeleteFeedRequest.headers:type_name -> iotics.api.Headers
	17, // 6: iotics.api.DeleteFeedRequest.args:type_name -> iotics.api.DeleteFeedRequest.Arguments
	29, // 7: iotics.api.DeleteFeedResponse.headers:type_name -> iotics.api.Headers
	18, // 8: iotics.api.DeleteFeedResponse.payload:type_name -> iotics.api.DeleteFeedResponse.Payload
	29, // 9: iotics.api.UpdateFeedRequest.headers:type_name -> iotics.api.Headers
	20, // 10: iotics.api.UpdateFeedRequest.args:type_name -> iotics.api.UpdateFeedRequest.Arguments
	19, // 11: iotics.api.UpdateFeedRequest.payload:type_name -> iotics.api.UpdateFeedRequest.Payload
	29, // 12: iotics.api.UpdateFeedResponse.headers:type_name -> iotics.api.Headers
	21, // 13: iotics.api.UpdateFeedResponse.payload:type_name -> iotics.api.UpdateFeedResponse.Payload
	29, // 14: iotics.api.ShareFeedDataRequest.headers:type_name -> iotics.api.Headers
	23, // 15: iotics.api.ShareFeedDataRequest.args:type_name -> iotics.api.ShareFeedDataRequest.Arguments
	22, // 16: iotics.api.ShareFeedDataRequest.payload:type_name -> iotics.api.ShareFeedDataRequest.Payload
	29, // 17: iotics.api.ShareFeedDataResponse.headers:type_name -> iotics.api.Headers
	29, // 18: iotics.api.ListAllFeedsRequest.headers:type_name -> iotics.api.Headers
	24, // 19: iotics.api.ListAllFeedsRequest.args:type_name -> iotics.api.ListAllFeedsRequest.Arguments
	30, // 20: iotics.api.ListAllFeedsRequest.range:type_name -> iotics.api.Range
	29, // 21: iotics.api.ListAllFeedsResponse.headers:type_name -> iotics.api.Headers
	25, // 22: iotics.api.ListAllFeedsResponse.payload:type_name -> iotics.api.ListAllFeedsResponse.Payload
	29, // 23: iotics.api.DescribeFeedRequest.headers:type_name -> iotics.api.Headers
	26, // 24: iotics.api.DescribeFeedRequest.args:type_name -> iotics.api.DescribeFeedRequest.Arguments
	29, // 25: iotics.api.DescribeFeedResponse.headers:type_name -> iotics.api.Headers
	28, // 26: iotics.api.DescribeFeedResponse.payload:type_name -> iotics.api.DescribeFeedResponse.Payload
	31, // 27: iotics.api.UpsertFeedWithMeta.values:type_name -> iotics.api.Value
	32, // 28: iotics.api.UpsertFeedWithMeta.properties:type_name -> iotics.api.Property
	33, // 29: iotics.api.CreateFeedRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	0,  // 30: iotics.api.CreateFeedResponse.Payload.feedId:type_name -> iotics.api.FeedID
	0,  // 31: iotics.api.DeleteFeedRequest.Arguments.feedId:type_name -> iotics.api.FeedID
	0,  // 32: iotics.api.DeleteFeedResponse.Payload.feedId:type_name -> iotics.api.FeedID
	34, // 33: iotics.api.UpdateFeedRequest.Payload.storeLast:type_name -> google.protobuf.BoolValue
	35, // 34: iotics.api.UpdateFeedRequest.Payload.values:type_name -> iotics.api.Values
	36, // 35: iotics.api.UpdateFeedRequest.Payload.properties:type_name -> iotics.api.PropertyUpdate
	0,  // 36: iotics.api.UpdateFeedRequest.Arguments.feedId:type_name -> iotics.api.FeedID
	0,  // 37: iotics.api.UpdateFeedResponse.Payload.feedId:type_name -> iotics.api.FeedID
	37, // 38: iotics.api.ShareFeedDataRequest.Payload.sample:type_name -> iotics.api.FeedData
	0,  // 39: iotics.api.ShareFeedDataRequest.Arguments.feedId:type_name -> iotics.api.FeedID
	33, // 40: iotics.api.ListAllFeedsRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	0,  // 41: iotics.api.ListAllFeedsResponse.Payload.feedIds:type_name -> iotics.api.FeedID
	0,  // 42: iotics.api.DescribeFeedRequest.Arguments.feedId:type_name -> iotics.api.FeedID
	31, // 43: iotics.api.DescribeFeedResponse.MetaResult.values:type_name -> iotics.api.Value
	32, // 44: iotics.api.DescribeFeedResponse.MetaResult.properties:type_name -> iotics.api.Property
	0,  // 45: iotics.api.DescribeFeedResponse.Payload.feedId:type_name -> iotics.api.FeedID
	27, // 46: iotics.api.DescribeFeedResponse.Payload.result:type_name -> iotics.api.DescribeFeedResponse.MetaResult
	1,  // 47: iotics.api.FeedAPI.CreateFeed:input_type -> iotics.api.CreateFeedRequest
	3,  // 48: iotics.api.FeedAPI.DeleteFeed:input_type -> iotics.api.DeleteFeedRequest
	5,  // 49: iotics.api.FeedAPI.UpdateFeed:input_type -> iotics.api.UpdateFeedRequest
	7,  // 50: iotics.api.FeedAPI.ShareFeedData:input_type -> iotics.api.ShareFeedDataRequest
	9,  // 51: iotics.api.FeedAPI.ListAllFeeds:input_type -> iotics.api.ListAllFeedsRequest
	11, // 52: iotics.api.FeedAPI.DescribeFeed:input_type -> iotics.api.DescribeFeedRequest
	2,  // 53: iotics.api.FeedAPI.CreateFeed:output_type -> iotics.api.CreateFeedResponse
	4,  // 54: iotics.api.FeedAPI.DeleteFeed:output_type -> iotics.api.DeleteFeedResponse
	6,  // 55: iotics.api.FeedAPI.UpdateFeed:output_type -> iotics.api.UpdateFeedResponse
	8,  // 56: iotics.api.FeedAPI.ShareFeedData:output_type -> iotics.api.ShareFeedDataResponse
	10, // 57: iotics.api.FeedAPI.ListAllFeeds:output_type -> iotics.api.ListAllFeedsResponse
	12, // 58: iotics.api.FeedAPI.DescribeFeed:output_type -> iotics.api.DescribeFeedResponse
	53, // [53:59] is the sub-list for method output_type
	47, // [47:53] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_iotics_api_feed_proto_init() }
func file_iotics_api_feed_proto_init() {
	if File_iotics_api_feed_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_feed_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFeedDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFeedDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllFeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllFeedsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertFeedWithMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFeedDataRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFeedDataRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllFeedsRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllFeedsResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFeedRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFeedResponse_MetaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_feed_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeFeedResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_feed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_feed_proto_goTypes,
		DependencyIndexes: file_iotics_api_feed_proto_depIdxs,
		MessageInfos:      file_iotics_api_feed_proto_msgTypes,
	}.Build()
	File_iotics_api_feed_proto = out.File
	file_iotics_api_feed_proto_rawDesc = nil
	file_iotics_api_feed_proto_goTypes = nil
	file_iotics_api_feed_proto_depIdxs = nil
}
