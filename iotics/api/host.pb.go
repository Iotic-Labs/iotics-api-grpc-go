// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (hosts)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/host.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetHostIDRequest gets the local host twin's ID
type GetHostIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *GetHostIDRequest) Reset() {
	*x = GetHostIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostIDRequest) ProtoMessage() {}

func (x *GetHostIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostIDRequest.ProtoReflect.Descriptor instead.
func (*GetHostIDRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{0}
}

func (x *GetHostIDRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

// GetHostIDResponse is the response containing the local host twin's ID
type GetHostIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                   `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *GetHostIDResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GetHostIDResponse) Reset() {
	*x = GetHostIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostIDResponse) ProtoMessage() {}

func (x *GetHostIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostIDResponse.ProtoReflect.Descriptor instead.
func (*GetHostIDResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{1}
}

func (x *GetHostIDResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetHostIDResponse) GetPayload() *GetHostIDResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// HostAllowedArguments are the arguments determining which host and twin the allow list check applies to.
type HostAllowedArguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Remote Host Id
	RemoteHostId string `protobuf:"bytes,1,opt,name=remoteHostId,proto3" json:"remoteHostId,omitempty"`
	// TwinDID of the twin to which the request applies
	TwinId *TwinID `protobuf:"bytes,2,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *HostAllowedArguments) Reset() {
	*x = HostAllowedArguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAllowedArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAllowedArguments) ProtoMessage() {}

func (x *HostAllowedArguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAllowedArguments.ProtoReflect.Descriptor instead.
func (*HostAllowedArguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{2}
}

func (x *HostAllowedArguments) GetRemoteHostId() string {
	if x != nil {
		return x.RemoteHostId
	}
	return ""
}

func (x *HostAllowedArguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// HostAllowedResponsePayload contans response details to a data/meta allow list check.
type HostAllowedResponsePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Remote Host Id
	RemoteHostId string `protobuf:"bytes,1,opt,name=remoteHostId,proto3" json:"remoteHostId,omitempty"`
	// TwinDID of the twin to which the request applies
	TwinId *TwinID `protobuf:"bytes,2,opt,name=twinId,proto3" json:"twinId,omitempty"`
	// Whether the twin allows the remote host to perform meta or data actions
	Allowed bool `protobuf:"varint,3,opt,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *HostAllowedResponsePayload) Reset() {
	*x = HostAllowedResponsePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAllowedResponsePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAllowedResponsePayload) ProtoMessage() {}

func (x *HostAllowedResponsePayload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAllowedResponsePayload.ProtoReflect.Descriptor instead.
func (*HostAllowedResponsePayload) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{3}
}

func (x *HostAllowedResponsePayload) GetRemoteHostId() string {
	if x != nil {
		return x.RemoteHostId
	}
	return ""
}

func (x *HostAllowedResponsePayload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

func (x *HostAllowedResponsePayload) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

// IsHostDataAllowedRequest determines whether a remote host is allowed to perform data requests against the given twin.
type IsHostDataAllowedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IsHostDataAllowedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// IsHostDataAllowedRequest mandatory arguments
	Args *HostAllowedArguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *IsHostDataAllowedRequest) Reset() {
	*x = IsHostDataAllowedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsHostDataAllowedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsHostDataAllowedRequest) ProtoMessage() {}

func (x *IsHostDataAllowedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsHostDataAllowedRequest.ProtoReflect.Descriptor instead.
func (*IsHostDataAllowedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{4}
}

func (x *IsHostDataAllowedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *IsHostDataAllowedRequest) GetArgs() *HostAllowedArguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// IsHostDataAllowedResponse is the response to for an IsHostDataAllowed call
type IsHostDataAllowedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IsHostDataAllowedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// IsHostDataAllowedResponse payload
	Payload *HostAllowedResponsePayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *IsHostDataAllowedResponse) Reset() {
	*x = IsHostDataAllowedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsHostDataAllowedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsHostDataAllowedResponse) ProtoMessage() {}

func (x *IsHostDataAllowedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsHostDataAllowedResponse.ProtoReflect.Descriptor instead.
func (*IsHostDataAllowedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{5}
}

func (x *IsHostDataAllowedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *IsHostDataAllowedResponse) GetPayload() *HostAllowedResponsePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// IsHostMetaAllowedRequest determines whether a remote host is allowed to perform meta requests against the given twin.
type IsHostMetaAllowedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IsHostMetaAllowedRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// IsHostMetaAllowedRequest mandatory arguments
	Args *HostAllowedArguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *IsHostMetaAllowedRequest) Reset() {
	*x = IsHostMetaAllowedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsHostMetaAllowedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsHostMetaAllowedRequest) ProtoMessage() {}

func (x *IsHostMetaAllowedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsHostMetaAllowedRequest.ProtoReflect.Descriptor instead.
func (*IsHostMetaAllowedRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{6}
}

func (x *IsHostMetaAllowedRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *IsHostMetaAllowedRequest) GetArgs() *HostAllowedArguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// IsHostDataAllowedResponse is the response to for an IsHostMetaAllowed call
type IsHostMetaAllowedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IsHostMetaAllowedResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// IsHostMetaAllowedResponse payload
	Payload *HostAllowedResponsePayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *IsHostMetaAllowedResponse) Reset() {
	*x = IsHostMetaAllowedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsHostMetaAllowedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsHostMetaAllowedResponse) ProtoMessage() {}

func (x *IsHostMetaAllowedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsHostMetaAllowedResponse.ProtoReflect.Descriptor instead.
func (*IsHostMetaAllowedResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{7}
}

func (x *IsHostMetaAllowedResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *IsHostMetaAllowedResponse) GetPayload() *HostAllowedResponsePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GetHostIDResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *GetHostIDResponse_Payload) Reset() {
	*x = GetHostIDResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_host_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostIDResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostIDResponse_Payload) ProtoMessage() {}

func (x *GetHostIDResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_host_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostIDResponse_Payload.ProtoReflect.Descriptor instead.
func (*GetHostIDResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_host_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetHostIDResponse_Payload) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

var File_iotics_api_host_proto protoreflect.FileDescriptor

var file_iotics_api_host_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22,
	0xa6, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x21, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x14, 0x48, 0x6f, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x86, 0x01, 0x0a, 0x1a, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x7f, 0x0a, 0x18, 0x49, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x49,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7f, 0x0a, 0x18, 0x49, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x49,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x9d, 0x02, 0x0a, 0x07, 0x48, 0x6f,
	0x73, 0x74, 0x41, 0x50, 0x49, 0x12, 0x4a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1c, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x62, 0x0a, 0x11, 0x49, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x73, 0x48, 0x6f, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x11, 0x49, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x09, 0x48, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02,
	0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_host_proto_rawDescOnce sync.Once
	file_iotics_api_host_proto_rawDescData = file_iotics_api_host_proto_rawDesc
)

func file_iotics_api_host_proto_rawDescGZIP() []byte {
	file_iotics_api_host_proto_rawDescOnce.Do(func() {
		file_iotics_api_host_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_host_proto_rawDescData)
	})
	return file_iotics_api_host_proto_rawDescData
}

var file_iotics_api_host_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_iotics_api_host_proto_goTypes = []interface{}{
	(*GetHostIDRequest)(nil),           // 0: iotics.api.GetHostIDRequest
	(*GetHostIDResponse)(nil),          // 1: iotics.api.GetHostIDResponse
	(*HostAllowedArguments)(nil),       // 2: iotics.api.HostAllowedArguments
	(*HostAllowedResponsePayload)(nil), // 3: iotics.api.HostAllowedResponsePayload
	(*IsHostDataAllowedRequest)(nil),   // 4: iotics.api.IsHostDataAllowedRequest
	(*IsHostDataAllowedResponse)(nil),  // 5: iotics.api.IsHostDataAllowedResponse
	(*IsHostMetaAllowedRequest)(nil),   // 6: iotics.api.IsHostMetaAllowedRequest
	(*IsHostMetaAllowedResponse)(nil),  // 7: iotics.api.IsHostMetaAllowedResponse
	(*GetHostIDResponse_Payload)(nil),  // 8: iotics.api.GetHostIDResponse.Payload
	(*Headers)(nil),                    // 9: iotics.api.Headers
	(*TwinID)(nil),                     // 10: iotics.api.TwinID
}
var file_iotics_api_host_proto_depIdxs = []int32{
	9,  // 0: iotics.api.GetHostIDRequest.headers:type_name -> iotics.api.Headers
	9,  // 1: iotics.api.GetHostIDResponse.headers:type_name -> iotics.api.Headers
	8,  // 2: iotics.api.GetHostIDResponse.payload:type_name -> iotics.api.GetHostIDResponse.Payload
	10, // 3: iotics.api.HostAllowedArguments.twinId:type_name -> iotics.api.TwinID
	10, // 4: iotics.api.HostAllowedResponsePayload.twinId:type_name -> iotics.api.TwinID
	9,  // 5: iotics.api.IsHostDataAllowedRequest.headers:type_name -> iotics.api.Headers
	2,  // 6: iotics.api.IsHostDataAllowedRequest.args:type_name -> iotics.api.HostAllowedArguments
	9,  // 7: iotics.api.IsHostDataAllowedResponse.headers:type_name -> iotics.api.Headers
	3,  // 8: iotics.api.IsHostDataAllowedResponse.payload:type_name -> iotics.api.HostAllowedResponsePayload
	9,  // 9: iotics.api.IsHostMetaAllowedRequest.headers:type_name -> iotics.api.Headers
	2,  // 10: iotics.api.IsHostMetaAllowedRequest.args:type_name -> iotics.api.HostAllowedArguments
	9,  // 11: iotics.api.IsHostMetaAllowedResponse.headers:type_name -> iotics.api.Headers
	3,  // 12: iotics.api.IsHostMetaAllowedResponse.payload:type_name -> iotics.api.HostAllowedResponsePayload
	0,  // 13: iotics.api.HostAPI.GetHostID:input_type -> iotics.api.GetHostIDRequest
	4,  // 14: iotics.api.HostAPI.IsHostDataAllowed:input_type -> iotics.api.IsHostDataAllowedRequest
	6,  // 15: iotics.api.HostAPI.IsHostMetaAllowed:input_type -> iotics.api.IsHostMetaAllowedRequest
	1,  // 16: iotics.api.HostAPI.GetHostID:output_type -> iotics.api.GetHostIDResponse
	5,  // 17: iotics.api.HostAPI.IsHostDataAllowed:output_type -> iotics.api.IsHostDataAllowedResponse
	7,  // 18: iotics.api.HostAPI.IsHostMetaAllowed:output_type -> iotics.api.IsHostMetaAllowedResponse
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_iotics_api_host_proto_init() }
func file_iotics_api_host_proto_init() {
	if File_iotics_api_host_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_host_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAllowedArguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAllowedResponsePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsHostDataAllowedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsHostDataAllowedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsHostMetaAllowedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsHostMetaAllowedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_host_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostIDResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_host_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_host_proto_goTypes,
		DependencyIndexes: file_iotics_api_host_proto_depIdxs,
		MessageInfos:      file_iotics_api_host_proto_msgTypes,
	}.Build()
	File_iotics_api_host_proto = out.File
	file_iotics_api_host_proto_rawDesc = nil
	file_iotics_api_host_proto_goTypes = nil
	file_iotics_api_host_proto_depIdxs = nil
}
