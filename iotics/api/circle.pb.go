// Copyright (c) 2019-2024 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (circles)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/circle.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CircleID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Circle Identifier (using DID format)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CircleID) Reset() {
	*x = CircleID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircleID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircleID) ProtoMessage() {}

func (x *CircleID) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircleID.ProtoReflect.Descriptor instead.
func (*CircleID) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{0}
}

func (x *CircleID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpsertCircleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                     `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *UpsertCircleRequest_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpsertCircleRequest) Reset() {
	*x = UpsertCircleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCircleRequest) ProtoMessage() {}

func (x *UpsertCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCircleRequest.ProtoReflect.Descriptor instead.
func (*UpsertCircleRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertCircleRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpsertCircleRequest) GetPayload() *UpsertCircleRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpsertCircleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                      `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *UpsertCircleResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpsertCircleResponse) Reset() {
	*x = UpsertCircleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCircleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCircleResponse) ProtoMessage() {}

func (x *UpsertCircleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCircleResponse.ProtoReflect.Descriptor instead.
func (*UpsertCircleResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertCircleResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpsertCircleResponse) GetPayload() *UpsertCircleResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type DeleteCircleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                       `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Args    *DeleteCircleRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DeleteCircleRequest) Reset() {
	*x = DeleteCircleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCircleRequest) ProtoMessage() {}

func (x *DeleteCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCircleRequest.ProtoReflect.Descriptor instead.
func (*DeleteCircleRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCircleRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteCircleRequest) GetArgs() *DeleteCircleRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

type DeleteCircleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                      `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *DeleteCircleResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeleteCircleResponse) Reset() {
	*x = DeleteCircleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCircleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCircleResponse) ProtoMessage() {}

func (x *DeleteCircleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCircleResponse.ProtoReflect.Descriptor instead.
func (*DeleteCircleResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCircleResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteCircleResponse) GetPayload() *DeleteCircleResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type DescribeCircleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                         `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Args    *DescribeCircleRequest_Arguments `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DescribeCircleRequest) Reset() {
	*x = DescribeCircleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCircleRequest) ProtoMessage() {}

func (x *DescribeCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCircleRequest.ProtoReflect.Descriptor instead.
func (*DescribeCircleRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeCircleRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeCircleRequest) GetArgs() *DescribeCircleRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

type DescribeCircleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                        `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *DescribeCircleResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DescribeCircleResponse) Reset() {
	*x = DescribeCircleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCircleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCircleResponse) ProtoMessage() {}

func (x *DescribeCircleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCircleResponse.ProtoReflect.Descriptor instead.
func (*DescribeCircleResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeCircleResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeCircleResponse) GetPayload() *DescribeCircleResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ListAllCirclesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Range   *Range   `protobuf:"bytes,20,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *ListAllCirclesRequest) Reset() {
	*x = ListAllCirclesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllCirclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCirclesRequest) ProtoMessage() {}

func (x *ListAllCirclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCirclesRequest.ProtoReflect.Descriptor instead.
func (*ListAllCirclesRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{7}
}

func (x *ListAllCirclesRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllCirclesRequest) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type ListAllCirclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                        `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *ListAllCirclesResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ListAllCirclesResponse) Reset() {
	*x = ListAllCirclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllCirclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCirclesResponse) ProtoMessage() {}

func (x *ListAllCirclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCirclesResponse.ProtoReflect.Descriptor instead.
func (*ListAllCirclesResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{8}
}

func (x *ListAllCirclesResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllCirclesResponse) GetPayload() *ListAllCirclesResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type UpsertCircleRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId   *CircleID   `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
	Properties []*Property `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpsertCircleRequest_Payload) Reset() {
	*x = UpsertCircleRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCircleRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCircleRequest_Payload) ProtoMessage() {}

func (x *UpsertCircleRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCircleRequest_Payload.ProtoReflect.Descriptor instead.
func (*UpsertCircleRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UpsertCircleRequest_Payload) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

func (x *UpsertCircleRequest_Payload) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpsertCircleResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleID *CircleID `protobuf:"bytes,1,opt,name=circleID,proto3" json:"circleID,omitempty"`
}

func (x *UpsertCircleResponse_Payload) Reset() {
	*x = UpsertCircleResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertCircleResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertCircleResponse_Payload) ProtoMessage() {}

func (x *UpsertCircleResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertCircleResponse_Payload.ProtoReflect.Descriptor instead.
func (*UpsertCircleResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{2, 0}
}

func (x *UpsertCircleResponse_Payload) GetCircleID() *CircleID {
	if x != nil {
		return x.CircleID
	}
	return nil
}

type DeleteCircleRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId *CircleID `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
}

func (x *DeleteCircleRequest_Arguments) Reset() {
	*x = DeleteCircleRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCircleRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCircleRequest_Arguments) ProtoMessage() {}

func (x *DeleteCircleRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCircleRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DeleteCircleRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DeleteCircleRequest_Arguments) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

type DeleteCircleResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId *CircleID `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
}

func (x *DeleteCircleResponse_Payload) Reset() {
	*x = DeleteCircleResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCircleResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCircleResponse_Payload) ProtoMessage() {}

func (x *DeleteCircleResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCircleResponse_Payload.ProtoReflect.Descriptor instead.
func (*DeleteCircleResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteCircleResponse_Payload) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

type DescribeCircleRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId *CircleID `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
}

func (x *DescribeCircleRequest_Arguments) Reset() {
	*x = DescribeCircleRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCircleRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCircleRequest_Arguments) ProtoMessage() {}

func (x *DescribeCircleRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCircleRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DescribeCircleRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DescribeCircleRequest_Arguments) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

type DescribeCircleResponse_MetaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*Property            `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DescribeCircleResponse_MetaResult) Reset() {
	*x = DescribeCircleResponse_MetaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCircleResponse_MetaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCircleResponse_MetaResult) ProtoMessage() {}

func (x *DescribeCircleResponse_MetaResult) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCircleResponse_MetaResult.ProtoReflect.Descriptor instead.
func (*DescribeCircleResponse_MetaResult) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DescribeCircleResponse_MetaResult) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *DescribeCircleResponse_MetaResult) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DescribeCircleResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId *CircleID                          `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
	Result   *DescribeCircleResponse_MetaResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DescribeCircleResponse_Payload) Reset() {
	*x = DescribeCircleResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCircleResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCircleResponse_Payload) ProtoMessage() {}

func (x *DescribeCircleResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCircleResponse_Payload.ProtoReflect.Descriptor instead.
func (*DescribeCircleResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{6, 1}
}

func (x *DescribeCircleResponse_Payload) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

func (x *DescribeCircleResponse_Payload) GetResult() *DescribeCircleResponse_MetaResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListAllCirclesResponse_CircleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircleId   *CircleID              `protobuf:"bytes,1,opt,name=circleId,proto3" json:"circleId,omitempty"`
	Properties []*Property            `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ListAllCirclesResponse_CircleDetails) Reset() {
	*x = ListAllCirclesResponse_CircleDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllCirclesResponse_CircleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCirclesResponse_CircleDetails) ProtoMessage() {}

func (x *ListAllCirclesResponse_CircleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCirclesResponse_CircleDetails.ProtoReflect.Descriptor instead.
func (*ListAllCirclesResponse_CircleDetails) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListAllCirclesResponse_CircleDetails) GetCircleId() *CircleID {
	if x != nil {
		return x.CircleId
	}
	return nil
}

func (x *ListAllCirclesResponse_CircleDetails) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ListAllCirclesResponse_CircleDetails) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListAllCirclesResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Circles []*ListAllCirclesResponse_CircleDetails `protobuf:"bytes,1,rep,name=circles,proto3" json:"circles,omitempty"`
}

func (x *ListAllCirclesResponse_Payload) Reset() {
	*x = ListAllCirclesResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_circle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllCirclesResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCirclesResponse_Payload) ProtoMessage() {}

func (x *ListAllCirclesResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_circle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCirclesResponse_Payload.ProtoReflect.Descriptor instead.
func (*ListAllCirclesResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_circle_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ListAllCirclesResponse_Payload) GetCircles() []*ListAllCirclesResponse_CircleDetails {
	if x != nil {
		return x.Circles
	}
	return nil
}

var File_iotics_api_circle_proto protoreflect.FileDescriptor

var file_iotics_api_circle_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1a, 0x0a, 0x08, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x71, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x30, 0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3b, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x30, 0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49,
	0x44, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x3d, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69,
	0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x42,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x3b, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a,
	0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0xc6, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x3d, 0x0a, 0x09, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x90, 0x03, 0x0a, 0x16, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x7c, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x98, 0x03, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xb1, 0x01, 0x0a,
	0x0d, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x69,
	0x72, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x08, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x1a, 0x55, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x63,
	0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x32, 0xeb, 0x02, 0x0a, 0x09, 0x43, 0x69, 0x72, 0x63,
	0x6c, 0x65, 0x41, 0x50, 0x49, 0x12, 0x53, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43,
	0x69, 0x72, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69,
	0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0b, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71, 0x61, 0x70,
	0x69, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02, 0x0a, 0x49,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_circle_proto_rawDescOnce sync.Once
	file_iotics_api_circle_proto_rawDescData = file_iotics_api_circle_proto_rawDesc
)

func file_iotics_api_circle_proto_rawDescGZIP() []byte {
	file_iotics_api_circle_proto_rawDescOnce.Do(func() {
		file_iotics_api_circle_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_circle_proto_rawDescData)
	})
	return file_iotics_api_circle_proto_rawDescData
}

var file_iotics_api_circle_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_iotics_api_circle_proto_goTypes = []interface{}{
	(*CircleID)(nil),                             // 0: iotics.api.CircleID
	(*UpsertCircleRequest)(nil),                  // 1: iotics.api.UpsertCircleRequest
	(*UpsertCircleResponse)(nil),                 // 2: iotics.api.UpsertCircleResponse
	(*DeleteCircleRequest)(nil),                  // 3: iotics.api.DeleteCircleRequest
	(*DeleteCircleResponse)(nil),                 // 4: iotics.api.DeleteCircleResponse
	(*DescribeCircleRequest)(nil),                // 5: iotics.api.DescribeCircleRequest
	(*DescribeCircleResponse)(nil),               // 6: iotics.api.DescribeCircleResponse
	(*ListAllCirclesRequest)(nil),                // 7: iotics.api.ListAllCirclesRequest
	(*ListAllCirclesResponse)(nil),               // 8: iotics.api.ListAllCirclesResponse
	(*UpsertCircleRequest_Payload)(nil),          // 9: iotics.api.UpsertCircleRequest.Payload
	(*UpsertCircleResponse_Payload)(nil),         // 10: iotics.api.UpsertCircleResponse.Payload
	(*DeleteCircleRequest_Arguments)(nil),        // 11: iotics.api.DeleteCircleRequest.Arguments
	(*DeleteCircleResponse_Payload)(nil),         // 12: iotics.api.DeleteCircleResponse.Payload
	(*DescribeCircleRequest_Arguments)(nil),      // 13: iotics.api.DescribeCircleRequest.Arguments
	(*DescribeCircleResponse_MetaResult)(nil),    // 14: iotics.api.DescribeCircleResponse.MetaResult
	(*DescribeCircleResponse_Payload)(nil),       // 15: iotics.api.DescribeCircleResponse.Payload
	(*ListAllCirclesResponse_CircleDetails)(nil), // 16: iotics.api.ListAllCirclesResponse.CircleDetails
	(*ListAllCirclesResponse_Payload)(nil),       // 17: iotics.api.ListAllCirclesResponse.Payload
	(*Headers)(nil),                              // 18: iotics.api.Headers
	(*Range)(nil),                                // 19: iotics.api.Range
	(*Property)(nil),                             // 20: iotics.api.Property
	(*timestamppb.Timestamp)(nil),                // 21: google.protobuf.Timestamp
}
var file_iotics_api_circle_proto_depIdxs = []int32{
	18, // 0: iotics.api.UpsertCircleRequest.headers:type_name -> iotics.api.Headers
	9,  // 1: iotics.api.UpsertCircleRequest.payload:type_name -> iotics.api.UpsertCircleRequest.Payload
	18, // 2: iotics.api.UpsertCircleResponse.headers:type_name -> iotics.api.Headers
	10, // 3: iotics.api.UpsertCircleResponse.payload:type_name -> iotics.api.UpsertCircleResponse.Payload
	18, // 4: iotics.api.DeleteCircleRequest.headers:type_name -> iotics.api.Headers
	11, // 5: iotics.api.DeleteCircleRequest.args:type_name -> iotics.api.DeleteCircleRequest.Arguments
	18, // 6: iotics.api.DeleteCircleResponse.headers:type_name -> iotics.api.Headers
	12, // 7: iotics.api.DeleteCircleResponse.payload:type_name -> iotics.api.DeleteCircleResponse.Payload
	18, // 8: iotics.api.DescribeCircleRequest.headers:type_name -> iotics.api.Headers
	13, // 9: iotics.api.DescribeCircleRequest.args:type_name -> iotics.api.DescribeCircleRequest.Arguments
	18, // 10: iotics.api.DescribeCircleResponse.headers:type_name -> iotics.api.Headers
	15, // 11: iotics.api.DescribeCircleResponse.payload:type_name -> iotics.api.DescribeCircleResponse.Payload
	18, // 12: iotics.api.ListAllCirclesRequest.headers:type_name -> iotics.api.Headers
	19, // 13: iotics.api.ListAllCirclesRequest.range:type_name -> iotics.api.Range
	18, // 14: iotics.api.ListAllCirclesResponse.headers:type_name -> iotics.api.Headers
	17, // 15: iotics.api.ListAllCirclesResponse.payload:type_name -> iotics.api.ListAllCirclesResponse.Payload
	0,  // 16: iotics.api.UpsertCircleRequest.Payload.circleId:type_name -> iotics.api.CircleID
	20, // 17: iotics.api.UpsertCircleRequest.Payload.properties:type_name -> iotics.api.Property
	0,  // 18: iotics.api.UpsertCircleResponse.Payload.circleID:type_name -> iotics.api.CircleID
	0,  // 19: iotics.api.DeleteCircleRequest.Arguments.circleId:type_name -> iotics.api.CircleID
	0,  // 20: iotics.api.DeleteCircleResponse.Payload.circleId:type_name -> iotics.api.CircleID
	0,  // 21: iotics.api.DescribeCircleRequest.Arguments.circleId:type_name -> iotics.api.CircleID
	20, // 22: iotics.api.DescribeCircleResponse.MetaResult.properties:type_name -> iotics.api.Property
	21, // 23: iotics.api.DescribeCircleResponse.MetaResult.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 24: iotics.api.DescribeCircleResponse.Payload.circleId:type_name -> iotics.api.CircleID
	14, // 25: iotics.api.DescribeCircleResponse.Payload.result:type_name -> iotics.api.DescribeCircleResponse.MetaResult
	0,  // 26: iotics.api.ListAllCirclesResponse.CircleDetails.circleId:type_name -> iotics.api.CircleID
	20, // 27: iotics.api.ListAllCirclesResponse.CircleDetails.properties:type_name -> iotics.api.Property
	21, // 28: iotics.api.ListAllCirclesResponse.CircleDetails.updatedAt:type_name -> google.protobuf.Timestamp
	16, // 29: iotics.api.ListAllCirclesResponse.Payload.circles:type_name -> iotics.api.ListAllCirclesResponse.CircleDetails
	1,  // 30: iotics.api.CircleAPI.UpsertCircle:input_type -> iotics.api.UpsertCircleRequest
	3,  // 31: iotics.api.CircleAPI.DeleteCircle:input_type -> iotics.api.DeleteCircleRequest
	5,  // 32: iotics.api.CircleAPI.DescribeCircle:input_type -> iotics.api.DescribeCircleRequest
	7,  // 33: iotics.api.CircleAPI.ListAllCircles:input_type -> iotics.api.ListAllCirclesRequest
	2,  // 34: iotics.api.CircleAPI.UpsertCircle:output_type -> iotics.api.UpsertCircleResponse
	4,  // 35: iotics.api.CircleAPI.DeleteCircle:output_type -> iotics.api.DeleteCircleResponse
	6,  // 36: iotics.api.CircleAPI.DescribeCircle:output_type -> iotics.api.DescribeCircleResponse
	8,  // 37: iotics.api.CircleAPI.ListAllCircles:output_type -> iotics.api.ListAllCirclesResponse
	34, // [34:38] is the sub-list for method output_type
	30, // [30:34] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_iotics_api_circle_proto_init() }
func file_iotics_api_circle_proto_init() {
	if File_iotics_api_circle_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_circle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircleID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCircleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCircleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCircleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCircleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCircleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCircleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllCirclesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllCirclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCircleRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertCircleResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCircleRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCircleResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCircleRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCircleResponse_MetaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCircleResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllCirclesResponse_CircleDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_circle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllCirclesResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_circle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_circle_proto_goTypes,
		DependencyIndexes: file_iotics_api_circle_proto_depIdxs,
		MessageInfos:      file_iotics_api_circle_proto_msgTypes,
	}.Build()
	File_iotics_api_circle_proto = out.File
	file_iotics_api_circle_proto_rawDesc = nil
	file_iotics_api_circle_proto_goTypes = nil
	file_iotics_api_circle_proto_depIdxs = nil
}
