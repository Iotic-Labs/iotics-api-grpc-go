// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (interests)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/interest.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An interest is the relationship between a Twin and an Input.
type InputInterest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender twin unique identifier.
	SenderTwinId *TwinID `protobuf:"bytes,1,opt,name=senderTwinId,proto3" json:"senderTwinId,omitempty"`
	// a reference to the input of interest
	DestInputId *InputID `protobuf:"bytes,2,opt,name=destInputId,proto3" json:"destInputId,omitempty"`
}

func (x *InputInterest) Reset() {
	*x = InputInterest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputInterest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputInterest) ProtoMessage() {}

func (x *InputInterest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputInterest.ProtoReflect.Descriptor instead.
func (*InputInterest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{0}
}

func (x *InputInterest) GetSenderTwinId() *TwinID {
	if x != nil {
		return x.SenderTwinId
	}
	return nil
}

func (x *InputInterest) GetDestInputId() *InputID {
	if x != nil {
		return x.DestInputId
	}
	return nil
}

// SendInputMessageRequest is used to send a message to a given input.
type SendInputMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SendInputMessageRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// SendInputMessageRequest mandatory arguments
	Args *SendInputMessageRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// SendInputMessageRequest payload
	Payload *SendInputMessageRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *SendInputMessageRequest) Reset() {
	*x = SendInputMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest) ProtoMessage() {}

func (x *SendInputMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1}
}

func (x *SendInputMessageRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *SendInputMessageRequest) GetArgs() *SendInputMessageRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *SendInputMessageRequest) GetPayload() *SendInputMessageRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SendInputMessageResponse is used to indicate a successful send.
type SendInputMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SendInputMessageResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *SendInputMessageResponse) Reset() {
	*x = SendInputMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageResponse) ProtoMessage() {}

func (x *SendInputMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageResponse.ProtoReflect.Descriptor instead.
func (*SendInputMessageResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{2}
}

func (x *SendInputMessageResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

// An interest is the relationship between a Twin and a Feed. For example, creating
// an interest on (following) a Feed results in any data shared on said Feed to be forwarded to
// the associated Twin. Interests can be revoked either by the subscriber or provider and there
// may only be one interest between any unique Twin and Feed combination.
type Interest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Follower twin unique identifier.
	FollowerTwinId *TwinID `protobuf:"bytes,1,opt,name=followerTwinId,proto3" json:"followerTwinId,omitempty"`
	// a reference to the interested feed
	FollowedFeedId *FeedID `protobuf:"bytes,2,opt,name=followedFeedId,proto3" json:"followedFeedId,omitempty"`
}

func (x *Interest) Reset() {
	*x = Interest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interest) ProtoMessage() {}

func (x *Interest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interest.ProtoReflect.Descriptor instead.
func (*Interest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{3}
}

func (x *Interest) GetFollowerTwinId() *TwinID {
	if x != nil {
		return x.FollowerTwinId
	}
	return nil
}

func (x *Interest) GetFollowedFeedId() *FeedID {
	if x != nil {
		return x.FollowedFeedId
	}
	return nil
}

// FetchInterestRequest is used to initiate a stream to get the feed data shared on a given interest.
type FetchInterestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchInterestRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchInterestRequest arguments
	Args *FetchInterestRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// whether to fetch the last stored value if available (false by default)
	FetchLastStored *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=fetchLastStored,proto3" json:"fetchLastStored,omitempty"`
}

func (x *FetchInterestRequest) Reset() {
	*x = FetchInterestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestRequest) ProtoMessage() {}

func (x *FetchInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestRequest.ProtoReflect.Descriptor instead.
func (*FetchInterestRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{4}
}

func (x *FetchInterestRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchInterestRequest) GetArgs() *FetchInterestRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FetchInterestRequest) GetFetchLastStored() *wrapperspb.BoolValue {
	if x != nil {
		return x.FetchLastStored
	}
	return nil
}

// FetchInterestResponse describes a feed value shared on a given interest.
type FetchInterestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchInterestResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchInterestResponse payload
	Payload *FetchInterestResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *FetchInterestResponse) Reset() {
	*x = FetchInterestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestResponse) ProtoMessage() {}

func (x *FetchInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestResponse.ProtoReflect.Descriptor instead.
func (*FetchInterestResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{5}
}

func (x *FetchInterestResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchInterestResponse) GetPayload() *FetchInterestResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// FetchLastStoredRequest is used to fetch the last stored value on a given interest if available.
type FetchLastStoredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchLastStoredRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchLastStoredRequest arguments
	Args *FetchLastStoredRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *FetchLastStoredRequest) Reset() {
	*x = FetchLastStoredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchLastStoredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchLastStoredRequest) ProtoMessage() {}

func (x *FetchLastStoredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchLastStoredRequest.ProtoReflect.Descriptor instead.
func (*FetchLastStoredRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{6}
}

func (x *FetchLastStoredRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchLastStoredRequest) GetArgs() *FetchLastStoredRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// SendInputMessageRequest payload.
type SendInputMessageRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message to send
	Message *InputMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendInputMessageRequest_Payload) Reset() {
	*x = SendInputMessageRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest_Payload) ProtoMessage() {}

func (x *SendInputMessageRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest_Payload.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SendInputMessageRequest_Payload) GetMessage() *InputMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// SendInputMessageRequest arguments.
type SendInputMessageRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *InputInterest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *SendInputMessageRequest_Arguments) Reset() {
	*x = SendInputMessageRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest_Arguments) ProtoMessage() {}

func (x *SendInputMessageRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest_Arguments.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SendInputMessageRequest_Arguments) GetInterest() *InputInterest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// FetchInterestRequest mandatory arguments.
type FetchInterestRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *FetchInterestRequest_Arguments) Reset() {
	*x = FetchInterestRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestRequest_Arguments) ProtoMessage() {}

func (x *FetchInterestRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestRequest_Arguments.ProtoReflect.Descriptor instead.
func (*FetchInterestRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FetchInterestRequest_Arguments) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// FetchInterestResponse payload.
type FetchInterestResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
	// The shared data
	FeedData *FeedData `protobuf:"bytes,2,opt,name=feedData,proto3" json:"feedData,omitempty"`
}

func (x *FetchInterestResponse_Payload) Reset() {
	*x = FetchInterestResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestResponse_Payload) ProtoMessage() {}

func (x *FetchInterestResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestResponse_Payload.ProtoReflect.Descriptor instead.
func (*FetchInterestResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FetchInterestResponse_Payload) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

func (x *FetchInterestResponse_Payload) GetFeedData() *FeedData {
	if x != nil {
		return x.FeedData
	}
	return nil
}

// FetchLastStoredRequest mandatory arguments.
type FetchLastStoredRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *FetchLastStoredRequest_Arguments) Reset() {
	*x = FetchLastStoredRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchLastStoredRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchLastStoredRequest_Arguments) ProtoMessage() {}

func (x *FetchLastStoredRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchLastStoredRequest_Arguments.ProtoReflect.Descriptor instead.
func (*FetchLastStoredRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{6, 0}
}

func (x *FetchLastStoredRequest_Arguments) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

var File_iotics_api_interest_proto protoreflect.FileDescriptor

var file_iotics_api_interest_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7e, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x49, 0x44, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x64, 0x22,
	0xd5, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x45, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x32, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x42, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x0e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x44, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x3e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x44, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x3d, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x6d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x3d, 0x0a,
	0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x32, 0xa5, 0x02, 0x0a,
	0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x12, 0x59, 0x0a, 0x0e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x81, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02,
	0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_interest_proto_rawDescOnce sync.Once
	file_iotics_api_interest_proto_rawDescData = file_iotics_api_interest_proto_rawDesc
)

func file_iotics_api_interest_proto_rawDescGZIP() []byte {
	file_iotics_api_interest_proto_rawDescOnce.Do(func() {
		file_iotics_api_interest_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_interest_proto_rawDescData)
	})
	return file_iotics_api_interest_proto_rawDescData
}

var file_iotics_api_interest_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_iotics_api_interest_proto_goTypes = []interface{}{
	(*InputInterest)(nil),                     // 0: iotics.api.InputInterest
	(*SendInputMessageRequest)(nil),           // 1: iotics.api.SendInputMessageRequest
	(*SendInputMessageResponse)(nil),          // 2: iotics.api.SendInputMessageResponse
	(*Interest)(nil),                          // 3: iotics.api.Interest
	(*FetchInterestRequest)(nil),              // 4: iotics.api.FetchInterestRequest
	(*FetchInterestResponse)(nil),             // 5: iotics.api.FetchInterestResponse
	(*FetchLastStoredRequest)(nil),            // 6: iotics.api.FetchLastStoredRequest
	(*SendInputMessageRequest_Payload)(nil),   // 7: iotics.api.SendInputMessageRequest.Payload
	(*SendInputMessageRequest_Arguments)(nil), // 8: iotics.api.SendInputMessageRequest.Arguments
	(*FetchInterestRequest_Arguments)(nil),    // 9: iotics.api.FetchInterestRequest.Arguments
	(*FetchInterestResponse_Payload)(nil),     // 10: iotics.api.FetchInterestResponse.Payload
	(*FetchLastStoredRequest_Arguments)(nil),  // 11: iotics.api.FetchLastStoredRequest.Arguments
	(*TwinID)(nil),                            // 12: iotics.api.TwinID
	(*InputID)(nil),                           // 13: iotics.api.InputID
	(*Headers)(nil),                           // 14: iotics.api.Headers
	(*FeedID)(nil),                            // 15: iotics.api.FeedID
	(*wrapperspb.BoolValue)(nil),              // 16: google.protobuf.BoolValue
	(*InputMessage)(nil),                      // 17: iotics.api.InputMessage
	(*FeedData)(nil),                          // 18: iotics.api.FeedData
}
var file_iotics_api_interest_proto_depIdxs = []int32{
	12, // 0: iotics.api.InputInterest.senderTwinId:type_name -> iotics.api.TwinID
	13, // 1: iotics.api.InputInterest.destInputId:type_name -> iotics.api.InputID
	14, // 2: iotics.api.SendInputMessageRequest.headers:type_name -> iotics.api.Headers
	8,  // 3: iotics.api.SendInputMessageRequest.args:type_name -> iotics.api.SendInputMessageRequest.Arguments
	7,  // 4: iotics.api.SendInputMessageRequest.payload:type_name -> iotics.api.SendInputMessageRequest.Payload
	14, // 5: iotics.api.SendInputMessageResponse.headers:type_name -> iotics.api.Headers
	12, // 6: iotics.api.Interest.followerTwinId:type_name -> iotics.api.TwinID
	15, // 7: iotics.api.Interest.followedFeedId:type_name -> iotics.api.FeedID
	14, // 8: iotics.api.FetchInterestRequest.headers:type_name -> iotics.api.Headers
	9,  // 9: iotics.api.FetchInterestRequest.args:type_name -> iotics.api.FetchInterestRequest.Arguments
	16, // 10: iotics.api.FetchInterestRequest.fetchLastStored:type_name -> google.protobuf.BoolValue
	14, // 11: iotics.api.FetchInterestResponse.headers:type_name -> iotics.api.Headers
	10, // 12: iotics.api.FetchInterestResponse.payload:type_name -> iotics.api.FetchInterestResponse.Payload
	14, // 13: iotics.api.FetchLastStoredRequest.headers:type_name -> iotics.api.Headers
	11, // 14: iotics.api.FetchLastStoredRequest.args:type_name -> iotics.api.FetchLastStoredRequest.Arguments
	17, // 15: iotics.api.SendInputMessageRequest.Payload.message:type_name -> iotics.api.InputMessage
	0,  // 16: iotics.api.SendInputMessageRequest.Arguments.interest:type_name -> iotics.api.InputInterest
	3,  // 17: iotics.api.FetchInterestRequest.Arguments.interest:type_name -> iotics.api.Interest
	3,  // 18: iotics.api.FetchInterestResponse.Payload.interest:type_name -> iotics.api.Interest
	18, // 19: iotics.api.FetchInterestResponse.Payload.feedData:type_name -> iotics.api.FeedData
	3,  // 20: iotics.api.FetchLastStoredRequest.Arguments.interest:type_name -> iotics.api.Interest
	4,  // 21: iotics.api.InterestAPI.FetchInterests:input_type -> iotics.api.FetchInterestRequest
	6,  // 22: iotics.api.InterestAPI.FetchLastStored:input_type -> iotics.api.FetchLastStoredRequest
	1,  // 23: iotics.api.InterestAPI.SendInputMessage:input_type -> iotics.api.SendInputMessageRequest
	5,  // 24: iotics.api.InterestAPI.FetchInterests:output_type -> iotics.api.FetchInterestResponse
	5,  // 25: iotics.api.InterestAPI.FetchLastStored:output_type -> iotics.api.FetchInterestResponse
	2,  // 26: iotics.api.InterestAPI.SendInputMessage:output_type -> iotics.api.SendInputMessageResponse
	24, // [24:27] is the sub-list for method output_type
	21, // [21:24] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_iotics_api_interest_proto_init() }
func file_iotics_api_interest_proto_init() {
	if File_iotics_api_interest_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	file_iotics_api_feed_proto_init()
	file_iotics_api_input_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_interest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputInterest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchLastStoredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchLastStoredRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_interest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_interest_proto_goTypes,
		DependencyIndexes: file_iotics_api_interest_proto_depIdxs,
		MessageInfos:      file_iotics_api_interest_proto_msgTypes,
	}.Build()
	File_iotics_api_interest_proto = out.File
	file_iotics_api_interest_proto_rawDesc = nil
	file_iotics_api_interest_proto_goTypes = nil
	file_iotics_api_interest_proto_depIdxs = nil
}
