// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (interests)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/interest.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An interest is the relationship between a Twin and an Input.
type InputInterest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender twin unique identifier.
	SenderTwinId *TwinID `protobuf:"bytes,1,opt,name=senderTwinId,proto3" json:"senderTwinId,omitempty"`
	// a reference to the input of interest
	DestInput *InputInterest_DestinationInput `protobuf:"bytes,2,opt,name=destInput,proto3" json:"destInput,omitempty"`
}

func (x *InputInterest) Reset() {
	*x = InputInterest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputInterest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputInterest) ProtoMessage() {}

func (x *InputInterest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputInterest.ProtoReflect.Descriptor instead.
func (*InputInterest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{0}
}

func (x *InputInterest) GetSenderTwinId() *TwinID {
	if x != nil {
		return x.SenderTwinId
	}
	return nil
}

func (x *InputInterest) GetDestInput() *InputInterest_DestinationInput {
	if x != nil {
		return x.DestInput
	}
	return nil
}

// SendInputMessageRequest is used to send a message to a given input.
type SendInputMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SendInputMessageRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// SendInputMessageRequest mandatory arguments
	Args *SendInputMessageRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// SendInputMessageRequest payload
	Payload *SendInputMessageRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *SendInputMessageRequest) Reset() {
	*x = SendInputMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest) ProtoMessage() {}

func (x *SendInputMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1}
}

func (x *SendInputMessageRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *SendInputMessageRequest) GetArgs() *SendInputMessageRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *SendInputMessageRequest) GetPayload() *SendInputMessageRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// SendInputMessageResponse is used to indicate a successful send.
type SendInputMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SendInputMessageResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *SendInputMessageResponse) Reset() {
	*x = SendInputMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageResponse) ProtoMessage() {}

func (x *SendInputMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageResponse.ProtoReflect.Descriptor instead.
func (*SendInputMessageResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{2}
}

func (x *SendInputMessageResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

// An interest is the relationship between a Twin and a Feed. For example, creating
// an interest on (following) a Feed results in any data shared on said Feed to be forwarded to
// the associated Twin. Interests can be revoked either by the subscriber or provider and there
// may only be one interest between any unique Twin and Feed combination.
type Interest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Follower twin unique identifier.
	FollowerTwinId *TwinID `protobuf:"bytes,2,opt,name=followerTwinId,proto3" json:"followerTwinId,omitempty"`
	// a reference to the interested feed
	FollowedFeed *Interest_FollowedFeed `protobuf:"bytes,3,opt,name=followedFeed,proto3" json:"followedFeed,omitempty"`
}

func (x *Interest) Reset() {
	*x = Interest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interest) ProtoMessage() {}

func (x *Interest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interest.ProtoReflect.Descriptor instead.
func (*Interest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{3}
}

func (x *Interest) GetFollowerTwinId() *TwinID {
	if x != nil {
		return x.FollowerTwinId
	}
	return nil
}

func (x *Interest) GetFollowedFeed() *Interest_FollowedFeed {
	if x != nil {
		return x.FollowedFeed
	}
	return nil
}

// CreateInterestRequest is used to create an interest between a twin and a feed.
type CreateInterestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CreateInterestRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// CreateInterestRequest arguments
	Args *CreateInterestRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// CreateInterestRequest payload
	Payload *CreateInterestRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateInterestRequest) Reset() {
	*x = CreateInterestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterestRequest) ProtoMessage() {}

func (x *CreateInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterestRequest.ProtoReflect.Descriptor instead.
func (*CreateInterestRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{4}
}

func (x *CreateInterestRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateInterestRequest) GetArgs() *CreateInterestRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CreateInterestRequest) GetPayload() *CreateInterestRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// CreateInterestResponse describes a successfully created interest.
type CreateInterestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CreateInterestResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// CreateInterestResponse payload
	Payload *CreateInterestResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateInterestResponse) Reset() {
	*x = CreateInterestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterestResponse) ProtoMessage() {}

func (x *CreateInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterestResponse.ProtoReflect.Descriptor instead.
func (*CreateInterestResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{5}
}

func (x *CreateInterestResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateInterestResponse) GetPayload() *CreateInterestResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// ListAllInterestsRequest is used to list all interests initiated by a given twin.
type ListAllInterestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ListAllInterestsRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// ListAllInterestsRequest arguments
	Args *ListAllInterestsRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// Limit the results according to the value (optional: when not supplied, assume no default limits required - platform specific)
	Range *Range `protobuf:"bytes,20,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *ListAllInterestsRequest) Reset() {
	*x = ListAllInterestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllInterestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllInterestsRequest) ProtoMessage() {}

func (x *ListAllInterestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllInterestsRequest.ProtoReflect.Descriptor instead.
func (*ListAllInterestsRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{6}
}

func (x *ListAllInterestsRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllInterestsRequest) GetArgs() *ListAllInterestsRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ListAllInterestsRequest) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

// ListAllInterestsResponse describes all the interest initiated by the given twin.
type ListAllInterestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ListAllInterestsResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// ListAllInterestsResponse payload.
	Payload *ListAllInterestsResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ListAllInterestsResponse) Reset() {
	*x = ListAllInterestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllInterestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllInterestsResponse) ProtoMessage() {}

func (x *ListAllInterestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllInterestsResponse.ProtoReflect.Descriptor instead.
func (*ListAllInterestsResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{7}
}

func (x *ListAllInterestsResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllInterestsResponse) GetPayload() *ListAllInterestsResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// FetchInterestRequest is used to initiate a stream to get the feed data shared on a given interest.
type FetchInterestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchInterestRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchInterestRequest arguments
	Args *FetchInterestRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// whether to fetch the last stored value if available (false by default)
	FetchLastStored *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=fetchLastStored,proto3" json:"fetchLastStored,omitempty"`
}

func (x *FetchInterestRequest) Reset() {
	*x = FetchInterestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestRequest) ProtoMessage() {}

func (x *FetchInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestRequest.ProtoReflect.Descriptor instead.
func (*FetchInterestRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{8}
}

func (x *FetchInterestRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchInterestRequest) GetArgs() *FetchInterestRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FetchInterestRequest) GetFetchLastStored() *wrapperspb.BoolValue {
	if x != nil {
		return x.FetchLastStored
	}
	return nil
}

// FetchInterestResponse describes a feed value shared on a given interest.
type FetchInterestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchInterestResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchInterestResponse payload
	Payload *FetchInterestResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *FetchInterestResponse) Reset() {
	*x = FetchInterestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestResponse) ProtoMessage() {}

func (x *FetchInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestResponse.ProtoReflect.Descriptor instead.
func (*FetchInterestResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{9}
}

func (x *FetchInterestResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchInterestResponse) GetPayload() *FetchInterestResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// FetchLastStoredRequest is used to fetch the last stored value on a given interest if available.
type FetchLastStoredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FetchLastStoredRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// FetchLastStoredRequest arguments
	Args *FetchLastStoredRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *FetchLastStoredRequest) Reset() {
	*x = FetchLastStoredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchLastStoredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchLastStoredRequest) ProtoMessage() {}

func (x *FetchLastStoredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchLastStoredRequest.ProtoReflect.Descriptor instead.
func (*FetchLastStoredRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{10}
}

func (x *FetchLastStoredRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchLastStoredRequest) GetArgs() *FetchLastStoredRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// DeleteInterestRequest is used to delete an interest.
type DeleteInterestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeleteInterestRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DeleteInterestRequest args
	Args *DeleteInterestRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DeleteInterestRequest) Reset() {
	*x = DeleteInterestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestRequest) ProtoMessage() {}

func (x *DeleteInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestRequest.ProtoReflect.Descriptor instead.
func (*DeleteInterestRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteInterestRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteInterestRequest) GetArgs() *DeleteInterestRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// DeleteInterestResponse describes a deleted interest.
type DeleteInterestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeleteInterestResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// DeleteInterestResponse payload
	Payload *DeleteInterestResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeleteInterestResponse) Reset() {
	*x = DeleteInterestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestResponse) ProtoMessage() {}

func (x *DeleteInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestResponse.ProtoReflect.Descriptor instead.
func (*DeleteInterestResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteInterestResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteInterestResponse) GetPayload() *DeleteInterestResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// InputInterest destination input identification.
type InputInterest_DestinationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input to send the message to
	Input *Input `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// HostID to identify a remote input (Optional, keep empty if input is local)
	HostId *HostID `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *InputInterest_DestinationInput) Reset() {
	*x = InputInterest_DestinationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputInterest_DestinationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputInterest_DestinationInput) ProtoMessage() {}

func (x *InputInterest_DestinationInput) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputInterest_DestinationInput.ProtoReflect.Descriptor instead.
func (*InputInterest_DestinationInput) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *InputInterest_DestinationInput) GetInput() *Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *InputInterest_DestinationInput) GetHostId() *HostID {
	if x != nil {
		return x.HostId
	}
	return nil
}

// SendInputMessageRequest payload.
type SendInputMessageRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message to send
	Message *InputMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendInputMessageRequest_Payload) Reset() {
	*x = SendInputMessageRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest_Payload) ProtoMessage() {}

func (x *SendInputMessageRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest_Payload.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SendInputMessageRequest_Payload) GetMessage() *InputMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// SendInputMessageRequest arguments.
type SendInputMessageRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *InputInterest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *SendInputMessageRequest_Arguments) Reset() {
	*x = SendInputMessageRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInputMessageRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInputMessageRequest_Arguments) ProtoMessage() {}

func (x *SendInputMessageRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInputMessageRequest_Arguments.ProtoReflect.Descriptor instead.
func (*SendInputMessageRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SendInputMessageRequest_Arguments) GetInterest() *InputInterest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// FollowedFeed fully identify the (local or remote) feed to follow.
type Interest_FollowedFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Followed feed identifier
	Feed *Feed `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	// Feed remote host identifier (If not specified, the Interest is taken to be in scope of the host from which a request is made.)
	HostId *HostID `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *Interest_FollowedFeed) Reset() {
	*x = Interest_FollowedFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interest_FollowedFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interest_FollowedFeed) ProtoMessage() {}

func (x *Interest_FollowedFeed) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interest_FollowedFeed.ProtoReflect.Descriptor instead.
func (*Interest_FollowedFeed) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Interest_FollowedFeed) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *Interest_FollowedFeed) GetHostId() *HostID {
	if x != nil {
		return x.HostId
	}
	return nil
}

// CreateInterestRequest payload.
type CreateInterestRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interest *Interest `protobuf:"bytes,2,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *CreateInterestRequest_Payload) Reset() {
	*x = CreateInterestRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterestRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterestRequest_Payload) ProtoMessage() {}

func (x *CreateInterestRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterestRequest_Payload.ProtoReflect.Descriptor instead.
func (*CreateInterestRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreateInterestRequest_Payload) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// CreateInterestRequest mandatory arguments.
type CreateInterestRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Follower twin unique identifier
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *CreateInterestRequest_Arguments) Reset() {
	*x = CreateInterestRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterestRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterestRequest_Arguments) ProtoMessage() {}

func (x *CreateInterestRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterestRequest_Arguments.ProtoReflect.Descriptor instead.
func (*CreateInterestRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CreateInterestRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// CreateInterestResponse payload.
type CreateInterestResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Created interest
	Interest *Interest `protobuf:"bytes,2,opt,name=interest,proto3" json:"interest,omitempty"`
	// whether the interest exists already (creating an existing interest is idempotent).
	AlreadyCreated bool `protobuf:"varint,3,opt,name=alreadyCreated,proto3" json:"alreadyCreated,omitempty"`
}

func (x *CreateInterestResponse_Payload) Reset() {
	*x = CreateInterestResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInterestResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterestResponse_Payload) ProtoMessage() {}

func (x *CreateInterestResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterestResponse_Payload.ProtoReflect.Descriptor instead.
func (*CreateInterestResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CreateInterestResponse_Payload) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

func (x *CreateInterestResponse_Payload) GetAlreadyCreated() bool {
	if x != nil {
		return x.AlreadyCreated
	}
	return false
}

// ListAllInterestsRequest mandatory arguments.
type ListAllInterestsRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Follower twin unique identifier
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *ListAllInterestsRequest_Arguments) Reset() {
	*x = ListAllInterestsRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllInterestsRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllInterestsRequest_Arguments) ProtoMessage() {}

func (x *ListAllInterestsRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllInterestsRequest_Arguments.ProtoReflect.Descriptor instead.
func (*ListAllInterestsRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListAllInterestsRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// ListAllInterestsResponse payload.
type ListAllInterestsResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interests []*Interest `protobuf:"bytes,1,rep,name=interests,proto3" json:"interests,omitempty"`
}

func (x *ListAllInterestsResponse_Payload) Reset() {
	*x = ListAllInterestsResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllInterestsResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllInterestsResponse_Payload) ProtoMessage() {}

func (x *ListAllInterestsResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllInterestsResponse_Payload.ProtoReflect.Descriptor instead.
func (*ListAllInterestsResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListAllInterestsResponse_Payload) GetInterests() []*Interest {
	if x != nil {
		return x.Interests
	}
	return nil
}

// FetchInterestRequest mandatory arguments.
type FetchInterestRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *FetchInterestRequest_Arguments) Reset() {
	*x = FetchInterestRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestRequest_Arguments) ProtoMessage() {}

func (x *FetchInterestRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestRequest_Arguments.ProtoReflect.Descriptor instead.
func (*FetchInterestRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{8, 0}
}

func (x *FetchInterestRequest_Arguments) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// FetchInterestResponse payload.
type FetchInterestResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
	// The shared data
	FeedData *FeedData `protobuf:"bytes,2,opt,name=feedData,proto3" json:"feedData,omitempty"`
}

func (x *FetchInterestResponse_Payload) Reset() {
	*x = FetchInterestResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInterestResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInterestResponse_Payload) ProtoMessage() {}

func (x *FetchInterestResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInterestResponse_Payload.ProtoReflect.Descriptor instead.
func (*FetchInterestResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{9, 0}
}

func (x *FetchInterestResponse_Payload) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

func (x *FetchInterestResponse_Payload) GetFeedData() *FeedData {
	if x != nil {
		return x.FeedData
	}
	return nil
}

// FetchLastStoredRequest mandatory arguments.
type FetchLastStoredRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *FetchLastStoredRequest_Arguments) Reset() {
	*x = FetchLastStoredRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchLastStoredRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchLastStoredRequest_Arguments) ProtoMessage() {}

func (x *FetchLastStoredRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchLastStoredRequest_Arguments.ProtoReflect.Descriptor instead.
func (*FetchLastStoredRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{10, 0}
}

func (x *FetchLastStoredRequest_Arguments) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// DeleteInterestRequest mandatory arguments.
type DeleteInterestRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The interest
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *DeleteInterestRequest_Arguments) Reset() {
	*x = DeleteInterestRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestRequest_Arguments) ProtoMessage() {}

func (x *DeleteInterestRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DeleteInterestRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DeleteInterestRequest_Arguments) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

// DeleteInterestResponse payload.
type DeleteInterestResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The deleted interest.
	Interest *Interest `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
}

func (x *DeleteInterestResponse_Payload) Reset() {
	*x = DeleteInterestResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_interest_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInterestResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterestResponse_Payload) ProtoMessage() {}

func (x *DeleteInterestResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_interest_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterestResponse_Payload.ProtoReflect.Descriptor instead.
func (*DeleteInterestResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_interest_proto_rawDescGZIP(), []int{12, 0}
}

func (x *DeleteInterestResponse_Payload) GetInterest() *Interest {
	if x != nil {
		return x.Interest
	}
	return nil
}

var File_iotics_api_interest_proto protoreflect.FileDescriptor

var file_iotics_api_interest_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xfa, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x67, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x2a, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x02, 0x0a,
	0x17, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x3d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x42, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22,
	0xef, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x1a,
	0x60, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x22, 0xc2, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0x3b, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x0a,
	0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06,
	0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x44, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x63, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69,
	0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x3d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x22, 0x8a,
	0x02, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x3d, 0x0a, 0x09,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x15,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x6d, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x1a, 0x3d, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x3d, 0x0a,
	0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x22, 0xca, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3b, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x32, 0xbc, 0x04, 0x0a, 0x0b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x12, 0x59, 0x0a, 0x0e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x81, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c,
	0x61, 0x62, 0x73, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x71, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x3b, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49,
	0x41, 0x58, 0xaa, 0x02, 0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca,
	0x02, 0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_interest_proto_rawDescOnce sync.Once
	file_iotics_api_interest_proto_rawDescData = file_iotics_api_interest_proto_rawDesc
)

func file_iotics_api_interest_proto_rawDescGZIP() []byte {
	file_iotics_api_interest_proto_rawDescOnce.Do(func() {
		file_iotics_api_interest_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_interest_proto_rawDescData)
	})
	return file_iotics_api_interest_proto_rawDescData
}

var file_iotics_api_interest_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_iotics_api_interest_proto_goTypes = []interface{}{
	(*InputInterest)(nil),                     // 0: iotics.api.InputInterest
	(*SendInputMessageRequest)(nil),           // 1: iotics.api.SendInputMessageRequest
	(*SendInputMessageResponse)(nil),          // 2: iotics.api.SendInputMessageResponse
	(*Interest)(nil),                          // 3: iotics.api.Interest
	(*CreateInterestRequest)(nil),             // 4: iotics.api.CreateInterestRequest
	(*CreateInterestResponse)(nil),            // 5: iotics.api.CreateInterestResponse
	(*ListAllInterestsRequest)(nil),           // 6: iotics.api.ListAllInterestsRequest
	(*ListAllInterestsResponse)(nil),          // 7: iotics.api.ListAllInterestsResponse
	(*FetchInterestRequest)(nil),              // 8: iotics.api.FetchInterestRequest
	(*FetchInterestResponse)(nil),             // 9: iotics.api.FetchInterestResponse
	(*FetchLastStoredRequest)(nil),            // 10: iotics.api.FetchLastStoredRequest
	(*DeleteInterestRequest)(nil),             // 11: iotics.api.DeleteInterestRequest
	(*DeleteInterestResponse)(nil),            // 12: iotics.api.DeleteInterestResponse
	(*InputInterest_DestinationInput)(nil),    // 13: iotics.api.InputInterest.DestinationInput
	(*SendInputMessageRequest_Payload)(nil),   // 14: iotics.api.SendInputMessageRequest.Payload
	(*SendInputMessageRequest_Arguments)(nil), // 15: iotics.api.SendInputMessageRequest.Arguments
	(*Interest_FollowedFeed)(nil),             // 16: iotics.api.Interest.FollowedFeed
	(*CreateInterestRequest_Payload)(nil),     // 17: iotics.api.CreateInterestRequest.Payload
	(*CreateInterestRequest_Arguments)(nil),   // 18: iotics.api.CreateInterestRequest.Arguments
	(*CreateInterestResponse_Payload)(nil),    // 19: iotics.api.CreateInterestResponse.Payload
	(*ListAllInterestsRequest_Arguments)(nil), // 20: iotics.api.ListAllInterestsRequest.Arguments
	(*ListAllInterestsResponse_Payload)(nil),  // 21: iotics.api.ListAllInterestsResponse.Payload
	(*FetchInterestRequest_Arguments)(nil),    // 22: iotics.api.FetchInterestRequest.Arguments
	(*FetchInterestResponse_Payload)(nil),     // 23: iotics.api.FetchInterestResponse.Payload
	(*FetchLastStoredRequest_Arguments)(nil),  // 24: iotics.api.FetchLastStoredRequest.Arguments
	(*DeleteInterestRequest_Arguments)(nil),   // 25: iotics.api.DeleteInterestRequest.Arguments
	(*DeleteInterestResponse_Payload)(nil),    // 26: iotics.api.DeleteInterestResponse.Payload
	(*TwinID)(nil),                            // 27: iotics.api.TwinID
	(*Headers)(nil),                           // 28: iotics.api.Headers
	(*Range)(nil),                             // 29: iotics.api.Range
	(*wrapperspb.BoolValue)(nil),              // 30: google.protobuf.BoolValue
	(*Input)(nil),                             // 31: iotics.api.Input
	(*HostID)(nil),                            // 32: iotics.api.HostID
	(*InputMessage)(nil),                      // 33: iotics.api.InputMessage
	(*Feed)(nil),                              // 34: iotics.api.Feed
	(*FeedData)(nil),                          // 35: iotics.api.FeedData
}
var file_iotics_api_interest_proto_depIdxs = []int32{
	27, // 0: iotics.api.InputInterest.senderTwinId:type_name -> iotics.api.TwinID
	13, // 1: iotics.api.InputInterest.destInput:type_name -> iotics.api.InputInterest.DestinationInput
	28, // 2: iotics.api.SendInputMessageRequest.headers:type_name -> iotics.api.Headers
	15, // 3: iotics.api.SendInputMessageRequest.args:type_name -> iotics.api.SendInputMessageRequest.Arguments
	14, // 4: iotics.api.SendInputMessageRequest.payload:type_name -> iotics.api.SendInputMessageRequest.Payload
	28, // 5: iotics.api.SendInputMessageResponse.headers:type_name -> iotics.api.Headers
	27, // 6: iotics.api.Interest.followerTwinId:type_name -> iotics.api.TwinID
	16, // 7: iotics.api.Interest.followedFeed:type_name -> iotics.api.Interest.FollowedFeed
	28, // 8: iotics.api.CreateInterestRequest.headers:type_name -> iotics.api.Headers
	18, // 9: iotics.api.CreateInterestRequest.args:type_name -> iotics.api.CreateInterestRequest.Arguments
	17, // 10: iotics.api.CreateInterestRequest.payload:type_name -> iotics.api.CreateInterestRequest.Payload
	28, // 11: iotics.api.CreateInterestResponse.headers:type_name -> iotics.api.Headers
	19, // 12: iotics.api.CreateInterestResponse.payload:type_name -> iotics.api.CreateInterestResponse.Payload
	28, // 13: iotics.api.ListAllInterestsRequest.headers:type_name -> iotics.api.Headers
	20, // 14: iotics.api.ListAllInterestsRequest.args:type_name -> iotics.api.ListAllInterestsRequest.Arguments
	29, // 15: iotics.api.ListAllInterestsRequest.range:type_name -> iotics.api.Range
	28, // 16: iotics.api.ListAllInterestsResponse.headers:type_name -> iotics.api.Headers
	21, // 17: iotics.api.ListAllInterestsResponse.payload:type_name -> iotics.api.ListAllInterestsResponse.Payload
	28, // 18: iotics.api.FetchInterestRequest.headers:type_name -> iotics.api.Headers
	22, // 19: iotics.api.FetchInterestRequest.args:type_name -> iotics.api.FetchInterestRequest.Arguments
	30, // 20: iotics.api.FetchInterestRequest.fetchLastStored:type_name -> google.protobuf.BoolValue
	28, // 21: iotics.api.FetchInterestResponse.headers:type_name -> iotics.api.Headers
	23, // 22: iotics.api.FetchInterestResponse.payload:type_name -> iotics.api.FetchInterestResponse.Payload
	28, // 23: iotics.api.FetchLastStoredRequest.headers:type_name -> iotics.api.Headers
	24, // 24: iotics.api.FetchLastStoredRequest.args:type_name -> iotics.api.FetchLastStoredRequest.Arguments
	28, // 25: iotics.api.DeleteInterestRequest.headers:type_name -> iotics.api.Headers
	25, // 26: iotics.api.DeleteInterestRequest.args:type_name -> iotics.api.DeleteInterestRequest.Arguments
	28, // 27: iotics.api.DeleteInterestResponse.headers:type_name -> iotics.api.Headers
	26, // 28: iotics.api.DeleteInterestResponse.payload:type_name -> iotics.api.DeleteInterestResponse.Payload
	31, // 29: iotics.api.InputInterest.DestinationInput.input:type_name -> iotics.api.Input
	32, // 30: iotics.api.InputInterest.DestinationInput.hostId:type_name -> iotics.api.HostID
	33, // 31: iotics.api.SendInputMessageRequest.Payload.message:type_name -> iotics.api.InputMessage
	0,  // 32: iotics.api.SendInputMessageRequest.Arguments.interest:type_name -> iotics.api.InputInterest
	34, // 33: iotics.api.Interest.FollowedFeed.feed:type_name -> iotics.api.Feed
	32, // 34: iotics.api.Interest.FollowedFeed.hostId:type_name -> iotics.api.HostID
	3,  // 35: iotics.api.CreateInterestRequest.Payload.interest:type_name -> iotics.api.Interest
	27, // 36: iotics.api.CreateInterestRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	3,  // 37: iotics.api.CreateInterestResponse.Payload.interest:type_name -> iotics.api.Interest
	27, // 38: iotics.api.ListAllInterestsRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	3,  // 39: iotics.api.ListAllInterestsResponse.Payload.interests:type_name -> iotics.api.Interest
	3,  // 40: iotics.api.FetchInterestRequest.Arguments.interest:type_name -> iotics.api.Interest
	3,  // 41: iotics.api.FetchInterestResponse.Payload.interest:type_name -> iotics.api.Interest
	35, // 42: iotics.api.FetchInterestResponse.Payload.feedData:type_name -> iotics.api.FeedData
	3,  // 43: iotics.api.FetchLastStoredRequest.Arguments.interest:type_name -> iotics.api.Interest
	3,  // 44: iotics.api.DeleteInterestRequest.Arguments.interest:type_name -> iotics.api.Interest
	3,  // 45: iotics.api.DeleteInterestResponse.Payload.interest:type_name -> iotics.api.Interest
	8,  // 46: iotics.api.InterestAPI.FetchInterests:input_type -> iotics.api.FetchInterestRequest
	10, // 47: iotics.api.InterestAPI.FetchLastStored:input_type -> iotics.api.FetchLastStoredRequest
	6,  // 48: iotics.api.InterestAPI.ListAllInterests:input_type -> iotics.api.ListAllInterestsRequest
	4,  // 49: iotics.api.InterestAPI.CreateInterest:input_type -> iotics.api.CreateInterestRequest
	11, // 50: iotics.api.InterestAPI.DeleteInterest:input_type -> iotics.api.DeleteInterestRequest
	1,  // 51: iotics.api.InterestAPI.SendInputMessage:input_type -> iotics.api.SendInputMessageRequest
	9,  // 52: iotics.api.InterestAPI.FetchInterests:output_type -> iotics.api.FetchInterestResponse
	9,  // 53: iotics.api.InterestAPI.FetchLastStored:output_type -> iotics.api.FetchInterestResponse
	7,  // 54: iotics.api.InterestAPI.ListAllInterests:output_type -> iotics.api.ListAllInterestsResponse
	5,  // 55: iotics.api.InterestAPI.CreateInterest:output_type -> iotics.api.CreateInterestResponse
	12, // 56: iotics.api.InterestAPI.DeleteInterest:output_type -> iotics.api.DeleteInterestResponse
	2,  // 57: iotics.api.InterestAPI.SendInputMessage:output_type -> iotics.api.SendInputMessageResponse
	52, // [52:58] is the sub-list for method output_type
	46, // [46:52] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_iotics_api_interest_proto_init() }
func file_iotics_api_interest_proto_init() {
	if File_iotics_api_interest_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	file_iotics_api_feed_proto_init()
	file_iotics_api_input_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_interest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputInterest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllInterestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllInterestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchLastStoredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputInterest_DestinationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInputMessageRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interest_FollowedFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterestRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterestRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInterestResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllInterestsRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllInterestsResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInterestResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchLastStoredRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_interest_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInterestResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_interest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_interest_proto_goTypes,
		DependencyIndexes: file_iotics_api_interest_proto_depIdxs,
		MessageInfos:      file_iotics_api_interest_proto_msgTypes,
	}.Build()
	File_iotics_api_interest_proto = out.File
	file_iotics_api_interest_proto_rawDesc = nil
	file_iotics_api_interest_proto_goTypes = nil
	file_iotics_api_interest_proto_depIdxs = nil
}
