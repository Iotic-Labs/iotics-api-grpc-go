// Copyright (c) 2019-2022 Iotic Labs Ltd. All rights reserved.

// Iotics Web protocol definitions (twins)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: iotics/api/twin.proto

package ioticsapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List all twins.
type ListAllTwinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Listing result range
	Range *Range `protobuf:"bytes,20,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *ListAllTwinsRequest) Reset() {
	*x = ListAllTwinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTwinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTwinsRequest) ProtoMessage() {}

func (x *ListAllTwinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTwinsRequest.ProtoReflect.Descriptor instead.
func (*ListAllTwinsRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{0}
}

func (x *ListAllTwinsRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllTwinsRequest) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

// Response of the list all twins request.
// Note this is useful for sync responses. In case there are too many twins (millions)
// this request may fail. Better opt for async behaviour via stomp/websocket.
type ListAllTwinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                      `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *ListAllTwinsResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ListAllTwinsResponse) Reset() {
	*x = ListAllTwinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTwinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTwinsResponse) ProtoMessage() {}

func (x *ListAllTwinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTwinsResponse.ProtoReflect.Descriptor instead.
func (*ListAllTwinsResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{1}
}

func (x *ListAllTwinsResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListAllTwinsResponse) GetPayload() *ListAllTwinsResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// CreateTwinRequest is made to create a twin (idempotent).
type CreateTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Request-specific payload
	Payload *CreateTwinRequest_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateTwinRequest) Reset() {
	*x = CreateTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTwinRequest) ProtoMessage() {}

func (x *CreateTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTwinRequest.ProtoReflect.Descriptor instead.
func (*CreateTwinRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTwinRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateTwinRequest) GetPayload() *CreateTwinRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// CreateTwinResponse is received when a twin has been created.
type CreateTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Request-specific payload
	Payload *CreateTwinResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CreateTwinResponse) Reset() {
	*x = CreateTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTwinResponse) ProtoMessage() {}

func (x *CreateTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTwinResponse.ProtoReflect.Descriptor instead.
func (*CreateTwinResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTwinResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreateTwinResponse) GetPayload() *CreateTwinResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// DeleteRequest is made to delete a particular twin.
type DeleteTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Request-specific arguments
	Args *DeleteTwinRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DeleteTwinRequest) Reset() {
	*x = DeleteTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTwinRequest) ProtoMessage() {}

func (x *DeleteTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTwinRequest.ProtoReflect.Descriptor instead.
func (*DeleteTwinRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTwinRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteTwinRequest) GetArgs() *DeleteTwinRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// Deleted is received when a twin has been deleted.
type DeleteTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Request-specific response
	Payload *DeleteTwinResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeleteTwinResponse) Reset() {
	*x = DeleteTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTwinResponse) ProtoMessage() {}

func (x *DeleteTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTwinResponse.ProtoReflect.Descriptor instead.
func (*DeleteTwinResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTwinResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeleteTwinResponse) GetPayload() *DeleteTwinResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Description of twin: Provides public metadata lookup for individual resources.
type DescribeTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                       `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Args    *DescribeTwinRequest_Arguments `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *DescribeTwinRequest) Reset() {
	*x = DescribeTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTwinRequest) ProtoMessage() {}

func (x *DescribeTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTwinRequest.ProtoReflect.Descriptor instead.
func (*DescribeTwinRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeTwinRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeTwinRequest) GetArgs() *DescribeTwinRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

// Metadata message for this Feed.
type FeedMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId    *FeedID `protobuf:"bytes,1,opt,name=feedId,proto3" json:"feedId,omitempty"`
	StoreLast bool    `protobuf:"varint,3,opt,name=storeLast,proto3" json:"storeLast,omitempty"`
}

func (x *FeedMeta) Reset() {
	*x = FeedMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedMeta) ProtoMessage() {}

func (x *FeedMeta) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedMeta.ProtoReflect.Descriptor instead.
func (*FeedMeta) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{7}
}

func (x *FeedMeta) GetFeedId() *FeedID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

func (x *FeedMeta) GetStoreLast() bool {
	if x != nil {
		return x.StoreLast
	}
	return false
}

// Metadata message for this input.
type InputMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputId *InputID `protobuf:"bytes,1,opt,name=inputId,proto3" json:"inputId,omitempty"`
}

func (x *InputMeta) Reset() {
	*x = InputMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMeta) ProtoMessage() {}

func (x *InputMeta) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMeta.ProtoReflect.Descriptor instead.
func (*InputMeta) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{8}
}

func (x *InputMeta) GetInputId() *InputID {
	if x != nil {
		return x.InputId
	}
	return nil
}

// The response for a description request on this twin.
type DescribeTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers *Headers                      `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Payload *DescribeTwinResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DescribeTwinResponse) Reset() {
	*x = DescribeTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTwinResponse) ProtoMessage() {}

func (x *DescribeTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTwinResponse.ProtoReflect.Descriptor instead.
func (*DescribeTwinResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeTwinResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescribeTwinResponse) GetPayload() *DescribeTwinResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// DEPRECATED - see Visibility field description for details.
type VisibilityUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DEPRECATED - see field description for details.
	Visibility Visibility `protobuf:"varint,1,opt,name=visibility,proto3,enum=iotics.api.Visibility" json:"visibility,omitempty"`
}

func (x *VisibilityUpdate) Reset() {
	*x = VisibilityUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisibilityUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibilityUpdate) ProtoMessage() {}

func (x *VisibilityUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibilityUpdate.ProtoReflect.Descriptor instead.
func (*VisibilityUpdate) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{10}
}

func (x *VisibilityUpdate) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PRIVATE
}

// GeoLocationUpdate describes the update of a twin location.
type GeoLocationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// New location of the twin. If unset, the previously set location will be removed
	Location *GeoLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GeoLocationUpdate) Reset() {
	*x = GeoLocationUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoLocationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoLocationUpdate) ProtoMessage() {}

func (x *GeoLocationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoLocationUpdate.ProtoReflect.Descriptor instead.
func (*GeoLocationUpdate) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{11}
}

func (x *GeoLocationUpdate) GetLocation() *GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

// UpdateTwinRequest is used to update attributes (including metadata) of a given twin.
type UpdateTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateTwinRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// UpdateTwinRequest arguments
	Args *UpdateTwinRequest_Arguments `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// UpdateTwinRequest payload
	Payload *UpdateTwinRequest_Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateTwinRequest) Reset() {
	*x = UpdateTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTwinRequest) ProtoMessage() {}

func (x *UpdateTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTwinRequest.ProtoReflect.Descriptor instead.
func (*UpdateTwinRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTwinRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpdateTwinRequest) GetArgs() *UpdateTwinRequest_Arguments {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *UpdateTwinRequest) GetPayload() *UpdateTwinRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpdateTwinResponse describes an updated twin. It is received when the update operation is successful.
type UpdateTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateTwinResponse headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// UpdateTwinResponse payload
	Payload *UpdateTwinResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpdateTwinResponse) Reset() {
	*x = UpdateTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTwinResponse) ProtoMessage() {}

func (x *UpdateTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTwinResponse.ProtoReflect.Descriptor instead.
func (*UpdateTwinResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateTwinResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpdateTwinResponse) GetPayload() *UpdateTwinResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpsertTwinRequest describes the full state of a twin + its feeds to create or update (full update)
type UpsertTwinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateTwinRequest headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// UpdateTwinRequest payload
	Payload *UpsertTwinRequest_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpsertTwinRequest) Reset() {
	*x = UpsertTwinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertTwinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertTwinRequest) ProtoMessage() {}

func (x *UpsertTwinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertTwinRequest.ProtoReflect.Descriptor instead.
func (*UpsertTwinRequest) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{14}
}

func (x *UpsertTwinRequest) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpsertTwinRequest) GetPayload() *UpsertTwinRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// UpsertTwinResponse is received when a twin and its feeds have been created/updated.
type UpsertTwinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common headers
	Headers *Headers `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Request-specific payload
	Payload *UpsertTwinResponse_Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *UpsertTwinResponse) Reset() {
	*x = UpsertTwinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertTwinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertTwinResponse) ProtoMessage() {}

func (x *UpsertTwinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertTwinResponse.ProtoReflect.Descriptor instead.
func (*UpsertTwinResponse) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{15}
}

func (x *UpsertTwinResponse) GetHeaders() *Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpsertTwinResponse) GetPayload() *UpsertTwinResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// ListAllTwinsResponse twin details.
type ListAllTwinsResponse_TwinDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Twin identifier.
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
	// DEPRECATED - see field description for details.
	Visibility Visibility `protobuf:"varint,2,opt,name=visibility,proto3,enum=iotics.api.Visibility" json:"visibility,omitempty"`
	// Twin location (if set).
	Location *GeoLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	// Twin custom properties.
	Properties []*Property `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	// Twin createdAt timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// Twin updatedAt timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ListAllTwinsResponse_TwinDetails) Reset() {
	*x = ListAllTwinsResponse_TwinDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTwinsResponse_TwinDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTwinsResponse_TwinDetails) ProtoMessage() {}

func (x *ListAllTwinsResponse_TwinDetails) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTwinsResponse_TwinDetails.ProtoReflect.Descriptor instead.
func (*ListAllTwinsResponse_TwinDetails) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListAllTwinsResponse_TwinDetails) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

func (x *ListAllTwinsResponse_TwinDetails) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PRIVATE
}

func (x *ListAllTwinsResponse_TwinDetails) GetLocation() *GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ListAllTwinsResponse_TwinDetails) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ListAllTwinsResponse_TwinDetails) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListAllTwinsResponse_TwinDetails) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Payload of listed twins.
type ListAllTwinsResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Twins []*ListAllTwinsResponse_TwinDetails `protobuf:"bytes,1,rep,name=twins,proto3" json:"twins,omitempty"`
}

func (x *ListAllTwinsResponse_Payload) Reset() {
	*x = ListAllTwinsResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTwinsResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTwinsResponse_Payload) ProtoMessage() {}

func (x *ListAllTwinsResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTwinsResponse_Payload.ProtoReflect.Descriptor instead.
func (*ListAllTwinsResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListAllTwinsResponse_Payload) GetTwins() []*ListAllTwinsResponse_TwinDetails {
	if x != nil {
		return x.Twins
	}
	return nil
}

// Arguments identifies the twin to create.
type CreateTwinRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Twin identifier string representation (simple string)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTwinRequest_Payload) Reset() {
	*x = CreateTwinRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTwinRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTwinRequest_Payload) ProtoMessage() {}

func (x *CreateTwinRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTwinRequest_Payload.ProtoReflect.Descriptor instead.
func (*CreateTwinRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateTwinRequest_Payload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Payload identifies the twin which was created.
type CreateTwinResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to delete
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *CreateTwinResponse_Payload) Reset() {
	*x = CreateTwinResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTwinResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTwinResponse_Payload) ProtoMessage() {}

func (x *CreateTwinResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTwinResponse_Payload.ProtoReflect.Descriptor instead.
func (*CreateTwinResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CreateTwinResponse_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// Arguments identifies the twin to delete.
type DeleteTwinRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to delete
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *DeleteTwinRequest_Arguments) Reset() {
	*x = DeleteTwinRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTwinRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTwinRequest_Arguments) ProtoMessage() {}

func (x *DeleteTwinRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTwinRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DeleteTwinRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteTwinRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// Payload identifies the twin which was deleted.
type DeleteTwinResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to delete
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *DeleteTwinResponse_Payload) Reset() {
	*x = DeleteTwinResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTwinResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTwinResponse_Payload) ProtoMessage() {}

func (x *DeleteTwinResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTwinResponse_Payload.ProtoReflect.Descriptor instead.
func (*DeleteTwinResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{5, 0}
}

func (x *DeleteTwinResponse_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// Only one action argument is necessary.
type DescribeTwinRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to describe
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *DescribeTwinRequest_Arguments) Reset() {
	*x = DescribeTwinRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTwinRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTwinRequest_Arguments) ProtoMessage() {}

func (x *DescribeTwinRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTwinRequest_Arguments.ProtoReflect.Descriptor instead.
func (*DescribeTwinRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DescribeTwinRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// Metadata result data bag for this feed.
type DescribeTwinResponse_MetaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *GeoLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// Deprecated - see field description for details.
	Visibility Visibility   `protobuf:"varint,2,opt,name=visibility,proto3,enum=iotics.api.Visibility" json:"visibility,omitempty"`
	Feeds      []*FeedMeta  `protobuf:"bytes,4,rep,name=feeds,proto3" json:"feeds,omitempty"`
	Inputs     []*InputMeta `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Custom properties associated with this twin.
	Properties []*Property `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
	// Twin createdAt timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// Twin updatedAt timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DescribeTwinResponse_MetaResult) Reset() {
	*x = DescribeTwinResponse_MetaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTwinResponse_MetaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTwinResponse_MetaResult) ProtoMessage() {}

func (x *DescribeTwinResponse_MetaResult) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTwinResponse_MetaResult.ProtoReflect.Descriptor instead.
func (*DescribeTwinResponse_MetaResult) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{9, 0}
}

func (x *DescribeTwinResponse_MetaResult) GetLocation() *GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DescribeTwinResponse_MetaResult) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PRIVATE
}

func (x *DescribeTwinResponse_MetaResult) GetFeeds() []*FeedMeta {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *DescribeTwinResponse_MetaResult) GetInputs() []*InputMeta {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DescribeTwinResponse_MetaResult) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *DescribeTwinResponse_MetaResult) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DescribeTwinResponse_MetaResult) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Payload of described twins.
type DescribeTwinResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the twin
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
	// the description details
	Result *DescribeTwinResponse_MetaResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DescribeTwinResponse_Payload) Reset() {
	*x = DescribeTwinResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTwinResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTwinResponse_Payload) ProtoMessage() {}

func (x *DescribeTwinResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTwinResponse_Payload.ProtoReflect.Descriptor instead.
func (*DescribeTwinResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{9, 1}
}

func (x *DescribeTwinResponse_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

func (x *DescribeTwinResponse_Payload) GetResult() *DescribeTwinResponse_MetaResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// UpdateTwinRequest mandatory arguments.
type UpdateTwinRequest_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to update
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *UpdateTwinRequest_Arguments) Reset() {
	*x = UpdateTwinRequest_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTwinRequest_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTwinRequest_Arguments) ProtoMessage() {}

func (x *UpdateTwinRequest_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTwinRequest_Arguments.ProtoReflect.Descriptor instead.
func (*UpdateTwinRequest_Arguments) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UpdateTwinRequest_Arguments) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// UpdateTwinRequest payload. One or more fields can be provided, depending on what needs to be updated.
// Note that the specified metadata changes are applied in the following order:
// tags, visibility, properties, labels, comments, location
type UpdateTwinRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DEPRECATED - see Visibility field description for details.
	NewVisibility *VisibilityUpdate `protobuf:"bytes,2,opt,name=newVisibility,proto3" json:"newVisibility,omitempty"`
	// Custom properties to add/remove. Internal properties (such as location) cannot be modified here.
	Properties *PropertyUpdate `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	// Location to be set/unset
	Location *GeoLocationUpdate `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *UpdateTwinRequest_Payload) Reset() {
	*x = UpdateTwinRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTwinRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTwinRequest_Payload) ProtoMessage() {}

func (x *UpdateTwinRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTwinRequest_Payload.ProtoReflect.Descriptor instead.
func (*UpdateTwinRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{12, 1}
}

func (x *UpdateTwinRequest_Payload) GetNewVisibility() *VisibilityUpdate {
	if x != nil {
		return x.NewVisibility
	}
	return nil
}

func (x *UpdateTwinRequest_Payload) GetProperties() *PropertyUpdate {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *UpdateTwinRequest_Payload) GetLocation() *GeoLocationUpdate {
	if x != nil {
		return x.Location
	}
	return nil
}

// UpdateTwinResponse payload.
type UpdateTwinResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to delete
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *UpdateTwinResponse_Payload) Reset() {
	*x = UpdateTwinResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTwinResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTwinResponse_Payload) ProtoMessage() {}

func (x *UpdateTwinResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTwinResponse_Payload.ProtoReflect.Descriptor instead.
func (*UpdateTwinResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UpdateTwinResponse_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

// UpsertTwinRequest payload. This state will be applied to the twin/feeds
type UpsertTwinRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the twin to create/update
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
	// DEPRECATED - see field description for details.
	// If any metadata network allowlist property is provided, the visibility value will be ignored.
	//
	// Default value: 'PRIVATE'
	Visibility Visibility `protobuf:"varint,2,opt,name=visibility,proto3,enum=iotics.api.Visibility" json:"visibility,omitempty"`
	// Twin Properties to set
	Properties []*Property `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	// Twin location to set. If not set the Twin will have no location
	Location *GeoLocation `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	// Feeds with metadata to set for the twin
	Feeds []*UpsertFeedWithMeta `protobuf:"bytes,7,rep,name=feeds,proto3" json:"feeds,omitempty"`
	// Inputs with metadata to set for the twin
	Inputs []*UpsertInputWithMeta `protobuf:"bytes,8,rep,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *UpsertTwinRequest_Payload) Reset() {
	*x = UpsertTwinRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertTwinRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertTwinRequest_Payload) ProtoMessage() {}

func (x *UpsertTwinRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertTwinRequest_Payload.ProtoReflect.Descriptor instead.
func (*UpsertTwinRequest_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{14, 0}
}

func (x *UpsertTwinRequest_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

func (x *UpsertTwinRequest_Payload) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_PRIVATE
}

func (x *UpsertTwinRequest_Payload) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *UpsertTwinRequest_Payload) GetLocation() *GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpsertTwinRequest_Payload) GetFeeds() []*UpsertFeedWithMeta {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *UpsertTwinRequest_Payload) GetInputs() []*UpsertInputWithMeta {
	if x != nil {
		return x.Inputs
	}
	return nil
}

// Payload identifies the twin which was created.
type UpsertTwinResponse_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the created/updated twin
	TwinId *TwinID `protobuf:"bytes,1,opt,name=twinId,proto3" json:"twinId,omitempty"`
}

func (x *UpsertTwinResponse_Payload) Reset() {
	*x = UpsertTwinResponse_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iotics_api_twin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertTwinResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertTwinResponse_Payload) ProtoMessage() {}

func (x *UpsertTwinResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_iotics_api_twin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertTwinResponse_Payload.ProtoReflect.Descriptor instead.
func (*UpsertTwinResponse_Payload) Descriptor() ([]byte, []int) {
	return file_iotics_api_twin_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UpsertTwinResponse_Payload) GetTwinId() *TwinID {
	if x != nil {
		return x.TwinId
	}
	return nil
}

var File_iotics_api_twin_proto protoreflect.FileDescriptor

var file_iotics_api_twin_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x77, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xab, 0x04, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xd0, 0x02, 0x0a, 0x0b, 0x54, 0x77, 0x69, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x4d, 0x0a, 0x07, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x74, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x05, 0x74, 0x77, 0x69, 0x6e, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x19, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x40, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x35, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a,
	0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49,
	0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x77,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x54, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2a,
	0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x52, 0x07, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x49, 0x64, 0x22, 0x86, 0x05, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0xfe, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0x7a, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06,
	0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44,
	0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x77,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a,
	0x10, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x6f,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49, 0x64, 0x1a,
	0xc4, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x6e,
	0x65, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x0d, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74,
	0x77, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xcd, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x54,
	0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xc7, 0x02, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x46, 0x65, 0x65, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x35, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x74, 0x77,
	0x69, 0x6e, 0x49, 0x64, 0x32, 0xef, 0x03, 0x0a, 0x07, 0x54, 0x77, 0x69, 0x6e, 0x41, 0x50, 0x49,
	0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x1d,
	0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x1d, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x69,
	0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x53, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x09, 0x54, 0x77, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x49, 0x6f, 0x74, 0x69, 0x63, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x69, 0x6f, 0x74,
	0x69, 0x63, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x71, 0x61, 0x70, 0x69,
	0x2f, 0x69, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x69, 0x6f, 0x74, 0x69,
	0x63, 0x73, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x49, 0x41, 0x58, 0xaa, 0x02, 0x0a, 0x49, 0x6f,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x49, 0x6f, 0x74, 0x69, 0x63,
	0x73, 0x5c, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iotics_api_twin_proto_rawDescOnce sync.Once
	file_iotics_api_twin_proto_rawDescData = file_iotics_api_twin_proto_rawDesc
)

func file_iotics_api_twin_proto_rawDescGZIP() []byte {
	file_iotics_api_twin_proto_rawDescOnce.Do(func() {
		file_iotics_api_twin_proto_rawDescData = protoimpl.X.CompressGZIP(file_iotics_api_twin_proto_rawDescData)
	})
	return file_iotics_api_twin_proto_rawDescData
}

var file_iotics_api_twin_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_iotics_api_twin_proto_goTypes = []interface{}{
	(*ListAllTwinsRequest)(nil),              // 0: iotics.api.ListAllTwinsRequest
	(*ListAllTwinsResponse)(nil),             // 1: iotics.api.ListAllTwinsResponse
	(*CreateTwinRequest)(nil),                // 2: iotics.api.CreateTwinRequest
	(*CreateTwinResponse)(nil),               // 3: iotics.api.CreateTwinResponse
	(*DeleteTwinRequest)(nil),                // 4: iotics.api.DeleteTwinRequest
	(*DeleteTwinResponse)(nil),               // 5: iotics.api.DeleteTwinResponse
	(*DescribeTwinRequest)(nil),              // 6: iotics.api.DescribeTwinRequest
	(*FeedMeta)(nil),                         // 7: iotics.api.FeedMeta
	(*InputMeta)(nil),                        // 8: iotics.api.InputMeta
	(*DescribeTwinResponse)(nil),             // 9: iotics.api.DescribeTwinResponse
	(*VisibilityUpdate)(nil),                 // 10: iotics.api.VisibilityUpdate
	(*GeoLocationUpdate)(nil),                // 11: iotics.api.GeoLocationUpdate
	(*UpdateTwinRequest)(nil),                // 12: iotics.api.UpdateTwinRequest
	(*UpdateTwinResponse)(nil),               // 13: iotics.api.UpdateTwinResponse
	(*UpsertTwinRequest)(nil),                // 14: iotics.api.UpsertTwinRequest
	(*UpsertTwinResponse)(nil),               // 15: iotics.api.UpsertTwinResponse
	(*ListAllTwinsResponse_TwinDetails)(nil), // 16: iotics.api.ListAllTwinsResponse.TwinDetails
	(*ListAllTwinsResponse_Payload)(nil),     // 17: iotics.api.ListAllTwinsResponse.Payload
	(*CreateTwinRequest_Payload)(nil),        // 18: iotics.api.CreateTwinRequest.Payload
	(*CreateTwinResponse_Payload)(nil),       // 19: iotics.api.CreateTwinResponse.Payload
	(*DeleteTwinRequest_Arguments)(nil),      // 20: iotics.api.DeleteTwinRequest.Arguments
	(*DeleteTwinResponse_Payload)(nil),       // 21: iotics.api.DeleteTwinResponse.Payload
	(*DescribeTwinRequest_Arguments)(nil),    // 22: iotics.api.DescribeTwinRequest.Arguments
	(*DescribeTwinResponse_MetaResult)(nil),  // 23: iotics.api.DescribeTwinResponse.MetaResult
	(*DescribeTwinResponse_Payload)(nil),     // 24: iotics.api.DescribeTwinResponse.Payload
	(*UpdateTwinRequest_Arguments)(nil),      // 25: iotics.api.UpdateTwinRequest.Arguments
	(*UpdateTwinRequest_Payload)(nil),        // 26: iotics.api.UpdateTwinRequest.Payload
	(*UpdateTwinResponse_Payload)(nil),       // 27: iotics.api.UpdateTwinResponse.Payload
	(*UpsertTwinRequest_Payload)(nil),        // 28: iotics.api.UpsertTwinRequest.Payload
	(*UpsertTwinResponse_Payload)(nil),       // 29: iotics.api.UpsertTwinResponse.Payload
	(*Headers)(nil),                          // 30: iotics.api.Headers
	(*Range)(nil),                            // 31: iotics.api.Range
	(*FeedID)(nil),                           // 32: iotics.api.FeedID
	(*InputID)(nil),                          // 33: iotics.api.InputID
	(Visibility)(0),                          // 34: iotics.api.Visibility
	(*GeoLocation)(nil),                      // 35: iotics.api.GeoLocation
	(*TwinID)(nil),                           // 36: iotics.api.TwinID
	(*Property)(nil),                         // 37: iotics.api.Property
	(*timestamppb.Timestamp)(nil),            // 38: google.protobuf.Timestamp
	(*PropertyUpdate)(nil),                   // 39: iotics.api.PropertyUpdate
	(*UpsertFeedWithMeta)(nil),               // 40: iotics.api.UpsertFeedWithMeta
	(*UpsertInputWithMeta)(nil),              // 41: iotics.api.UpsertInputWithMeta
}
var file_iotics_api_twin_proto_depIdxs = []int32{
	30, // 0: iotics.api.ListAllTwinsRequest.headers:type_name -> iotics.api.Headers
	31, // 1: iotics.api.ListAllTwinsRequest.range:type_name -> iotics.api.Range
	30, // 2: iotics.api.ListAllTwinsResponse.headers:type_name -> iotics.api.Headers
	17, // 3: iotics.api.ListAllTwinsResponse.payload:type_name -> iotics.api.ListAllTwinsResponse.Payload
	30, // 4: iotics.api.CreateTwinRequest.headers:type_name -> iotics.api.Headers
	18, // 5: iotics.api.CreateTwinRequest.payload:type_name -> iotics.api.CreateTwinRequest.Payload
	30, // 6: iotics.api.CreateTwinResponse.headers:type_name -> iotics.api.Headers
	19, // 7: iotics.api.CreateTwinResponse.payload:type_name -> iotics.api.CreateTwinResponse.Payload
	30, // 8: iotics.api.DeleteTwinRequest.headers:type_name -> iotics.api.Headers
	20, // 9: iotics.api.DeleteTwinRequest.args:type_name -> iotics.api.DeleteTwinRequest.Arguments
	30, // 10: iotics.api.DeleteTwinResponse.headers:type_name -> iotics.api.Headers
	21, // 11: iotics.api.DeleteTwinResponse.payload:type_name -> iotics.api.DeleteTwinResponse.Payload
	30, // 12: iotics.api.DescribeTwinRequest.headers:type_name -> iotics.api.Headers
	22, // 13: iotics.api.DescribeTwinRequest.args:type_name -> iotics.api.DescribeTwinRequest.Arguments
	32, // 14: iotics.api.FeedMeta.feedId:type_name -> iotics.api.FeedID
	33, // 15: iotics.api.InputMeta.inputId:type_name -> iotics.api.InputID
	30, // 16: iotics.api.DescribeTwinResponse.headers:type_name -> iotics.api.Headers
	24, // 17: iotics.api.DescribeTwinResponse.payload:type_name -> iotics.api.DescribeTwinResponse.Payload
	34, // 18: iotics.api.VisibilityUpdate.visibility:type_name -> iotics.api.Visibility
	35, // 19: iotics.api.GeoLocationUpdate.location:type_name -> iotics.api.GeoLocation
	30, // 20: iotics.api.UpdateTwinRequest.headers:type_name -> iotics.api.Headers
	25, // 21: iotics.api.UpdateTwinRequest.args:type_name -> iotics.api.UpdateTwinRequest.Arguments
	26, // 22: iotics.api.UpdateTwinRequest.payload:type_name -> iotics.api.UpdateTwinRequest.Payload
	30, // 23: iotics.api.UpdateTwinResponse.headers:type_name -> iotics.api.Headers
	27, // 24: iotics.api.UpdateTwinResponse.payload:type_name -> iotics.api.UpdateTwinResponse.Payload
	30, // 25: iotics.api.UpsertTwinRequest.headers:type_name -> iotics.api.Headers
	28, // 26: iotics.api.UpsertTwinRequest.payload:type_name -> iotics.api.UpsertTwinRequest.Payload
	30, // 27: iotics.api.UpsertTwinResponse.headers:type_name -> iotics.api.Headers
	29, // 28: iotics.api.UpsertTwinResponse.payload:type_name -> iotics.api.UpsertTwinResponse.Payload
	36, // 29: iotics.api.ListAllTwinsResponse.TwinDetails.twinId:type_name -> iotics.api.TwinID
	34, // 30: iotics.api.ListAllTwinsResponse.TwinDetails.visibility:type_name -> iotics.api.Visibility
	35, // 31: iotics.api.ListAllTwinsResponse.TwinDetails.location:type_name -> iotics.api.GeoLocation
	37, // 32: iotics.api.ListAllTwinsResponse.TwinDetails.properties:type_name -> iotics.api.Property
	38, // 33: iotics.api.ListAllTwinsResponse.TwinDetails.createdAt:type_name -> google.protobuf.Timestamp
	38, // 34: iotics.api.ListAllTwinsResponse.TwinDetails.updatedAt:type_name -> google.protobuf.Timestamp
	16, // 35: iotics.api.ListAllTwinsResponse.Payload.twins:type_name -> iotics.api.ListAllTwinsResponse.TwinDetails
	36, // 36: iotics.api.CreateTwinResponse.Payload.twinId:type_name -> iotics.api.TwinID
	36, // 37: iotics.api.DeleteTwinRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	36, // 38: iotics.api.DeleteTwinResponse.Payload.twinId:type_name -> iotics.api.TwinID
	36, // 39: iotics.api.DescribeTwinRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	35, // 40: iotics.api.DescribeTwinResponse.MetaResult.location:type_name -> iotics.api.GeoLocation
	34, // 41: iotics.api.DescribeTwinResponse.MetaResult.visibility:type_name -> iotics.api.Visibility
	7,  // 42: iotics.api.DescribeTwinResponse.MetaResult.feeds:type_name -> iotics.api.FeedMeta
	8,  // 43: iotics.api.DescribeTwinResponse.MetaResult.inputs:type_name -> iotics.api.InputMeta
	37, // 44: iotics.api.DescribeTwinResponse.MetaResult.properties:type_name -> iotics.api.Property
	38, // 45: iotics.api.DescribeTwinResponse.MetaResult.createdAt:type_name -> google.protobuf.Timestamp
	38, // 46: iotics.api.DescribeTwinResponse.MetaResult.updatedAt:type_name -> google.protobuf.Timestamp
	36, // 47: iotics.api.DescribeTwinResponse.Payload.twinId:type_name -> iotics.api.TwinID
	23, // 48: iotics.api.DescribeTwinResponse.Payload.result:type_name -> iotics.api.DescribeTwinResponse.MetaResult
	36, // 49: iotics.api.UpdateTwinRequest.Arguments.twinId:type_name -> iotics.api.TwinID
	10, // 50: iotics.api.UpdateTwinRequest.Payload.newVisibility:type_name -> iotics.api.VisibilityUpdate
	39, // 51: iotics.api.UpdateTwinRequest.Payload.properties:type_name -> iotics.api.PropertyUpdate
	11, // 52: iotics.api.UpdateTwinRequest.Payload.location:type_name -> iotics.api.GeoLocationUpdate
	36, // 53: iotics.api.UpdateTwinResponse.Payload.twinId:type_name -> iotics.api.TwinID
	36, // 54: iotics.api.UpsertTwinRequest.Payload.twinId:type_name -> iotics.api.TwinID
	34, // 55: iotics.api.UpsertTwinRequest.Payload.visibility:type_name -> iotics.api.Visibility
	37, // 56: iotics.api.UpsertTwinRequest.Payload.properties:type_name -> iotics.api.Property
	35, // 57: iotics.api.UpsertTwinRequest.Payload.location:type_name -> iotics.api.GeoLocation
	40, // 58: iotics.api.UpsertTwinRequest.Payload.feeds:type_name -> iotics.api.UpsertFeedWithMeta
	41, // 59: iotics.api.UpsertTwinRequest.Payload.inputs:type_name -> iotics.api.UpsertInputWithMeta
	36, // 60: iotics.api.UpsertTwinResponse.Payload.twinId:type_name -> iotics.api.TwinID
	2,  // 61: iotics.api.TwinAPI.CreateTwin:input_type -> iotics.api.CreateTwinRequest
	14, // 62: iotics.api.TwinAPI.UpsertTwin:input_type -> iotics.api.UpsertTwinRequest
	4,  // 63: iotics.api.TwinAPI.DeleteTwin:input_type -> iotics.api.DeleteTwinRequest
	12, // 64: iotics.api.TwinAPI.UpdateTwin:input_type -> iotics.api.UpdateTwinRequest
	6,  // 65: iotics.api.TwinAPI.DescribeTwin:input_type -> iotics.api.DescribeTwinRequest
	0,  // 66: iotics.api.TwinAPI.ListAllTwins:input_type -> iotics.api.ListAllTwinsRequest
	3,  // 67: iotics.api.TwinAPI.CreateTwin:output_type -> iotics.api.CreateTwinResponse
	15, // 68: iotics.api.TwinAPI.UpsertTwin:output_type -> iotics.api.UpsertTwinResponse
	5,  // 69: iotics.api.TwinAPI.DeleteTwin:output_type -> iotics.api.DeleteTwinResponse
	13, // 70: iotics.api.TwinAPI.UpdateTwin:output_type -> iotics.api.UpdateTwinResponse
	9,  // 71: iotics.api.TwinAPI.DescribeTwin:output_type -> iotics.api.DescribeTwinResponse
	1,  // 72: iotics.api.TwinAPI.ListAllTwins:output_type -> iotics.api.ListAllTwinsResponse
	67, // [67:73] is the sub-list for method output_type
	61, // [61:67] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_iotics_api_twin_proto_init() }
func file_iotics_api_twin_proto_init() {
	if File_iotics_api_twin_proto != nil {
		return
	}
	file_iotics_api_common_proto_init()
	file_iotics_api_feed_proto_init()
	file_iotics_api_input_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iotics_api_twin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTwinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTwinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisibilityUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoLocationUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertTwinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertTwinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTwinsResponse_TwinDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTwinsResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTwinRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTwinResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTwinRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTwinResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTwinRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTwinResponse_MetaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTwinResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTwinRequest_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTwinRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTwinResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertTwinRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iotics_api_twin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertTwinResponse_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iotics_api_twin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iotics_api_twin_proto_goTypes,
		DependencyIndexes: file_iotics_api_twin_proto_depIdxs,
		MessageInfos:      file_iotics_api_twin_proto_msgTypes,
	}.Build()
	File_iotics_api_twin_proto = out.File
	file_iotics_api_twin_proto_rawDesc = nil
	file_iotics_api_twin_proto_goTypes = nil
	file_iotics_api_twin_proto_depIdxs = nil
}
